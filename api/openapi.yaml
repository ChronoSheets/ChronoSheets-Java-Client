openapi: 3.0.1
info:
  description: "<div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color:\
    \ #3b4151!important;'><p>\r\n    ChronoSheets is a flexible timesheet solution\
    \ for small to medium businesses, it is free for small teams of up to 3 and there\
    \ are iOS and Android apps available.  Use the ChronoSheets API to create your\
    \ own custom integrations.  Before starting, sign up for a ChronoSheets account\
    \ at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.\r\
    \n</p></div><div id='cs-extra-info'></div>"
  termsOfService: ""
  title: ChronoSheets API
  version: v1
servers:
- url: https://api.chronosheets.com/
paths:
  /AggregateClientProjects/GetAggregateClientProjects:
    get:
      operationId: AggregateClientProjects_GetAggregateClientProjects
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateClient]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateClient]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateClient]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateClient]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateClient]]'
          description: OK
      summary: "Get client and project information, aggregated.  \r\nRequires the\
        \ 'SubmitTimesheets' or 'ManageClientsAndProjects' permissions."
      tags:
      - AggregateClientProjects
      x-accepts: application/json
  /AggregateJobTasks/GetAggregateJobTasks:
    get:
      operationId: AggregateJobTasks_GetAggregateJobTasks
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateJobCode]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateJobCode]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateJobCode]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateJobCode]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[AggregateJobCode]]'
          description: OK
      summary: "Get jobs and tasks information, aggregated.  \r\nRequires the 'SubmitTimesheets'\
        \ or 'ManageJobsAndTask' permissions."
      tags:
      - AggregateJobTasks
      x-accepts: application/json
  /Clients/GetClients:
    get:
      operationId: Clients_GetClients
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Client]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Client]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Client]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Client]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Client]]'
          description: OK
      summary: "Get a collection of clients that are under your organisation.  \r\n\
        Requires the 'ManageClientsAndProjects' or 'ManageJobsAndTask' permissions."
      tags:
      - Clients
      x-accepts: application/json
  /Clients/GetClient:
    get:
      operationId: Clients_GetClient
      parameters:
      - description: The ID of the Client you want to get
        in: query
        name: ClientId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Client]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Client]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Client]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Client]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Client]'
          description: OK
      summary: "Get a particular client.  \r\nRequires the 'ManageClientsAndProjects'\
        \ or 'ManageJobsAndTask' permissions."
      tags:
      - Clients
      x-accepts: application/json
  /Clients/CreateClient:
    post:
      operationId: Clients_CreateClient
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertClientRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertClientRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertClientRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertClientRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertClientRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertClientRequest'
        description: An Insert Client Request object containing values for the new
          Client to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a client.  \r\nRequires the 'ManageClientsAndProjects' permission."
      tags:
      - Clients
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Clients/UpdateClient:
    put:
      operationId: Clients_UpdateClient
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveClientRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SaveClientRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SaveClientRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/SaveClientRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaveClientRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaveClientRequest'
        description: A Save Client Request object containing updated fields.  Make
          sure to specify the Client Id in the request object so that ChronoSheets
          knows which Client to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Update a client.  \r\nRequires the 'ManageClientsAndProjects' permission."
      tags:
      - Clients
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /FileAttachments/DeleteTimesheetFileAttachment:
    delete:
      operationId: FileAttachments_DeleteTimesheetFileAttachment
      parameters:
      - description: The Id of the file attachment to delete
        in: query
        name: FileAttachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Delete a particular timesheet file attachment\r\nRequires the 'SubmitTimesheets'\
        \ permission."
      tags:
      - FileAttachments
      x-accepts: application/json
  /FileAttachments/GetMyFileAttachments:
    get:
      operationId: FileAttachments_GetMyFileAttachments
      parameters:
      - description: The Start date of the date range.  File attachments after this
          date will be obtained.
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The End date of the date range.  File attachments before this
          date will be obtained.
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: Skip this many File attachments
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many File attachments
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetFileAttachment]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetFileAttachment]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetFileAttachment]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetFileAttachment]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetFileAttachment]]'
          description: OK
      summary: Get my file attachments.  Get files you've attached to timesheets.
      tags:
      - FileAttachments
      x-accepts: application/json
  /FileAttachments/GetFileAttachmentById:
    get:
      operationId: FileAttachments_GetFileAttachmentById
      parameters:
      - description: The ID of the file attachment
        in: query
        name: FileAttachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetFileAttachment]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetFileAttachment]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetFileAttachment]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetFileAttachment]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetFileAttachment]'
          description: OK
      summary: Get a particular file attachment by ID.  User must own the file attachment
        for access.
      tags:
      - FileAttachments
      x-accepts: application/json
  /Fleet/GetVehicles:
    get:
      operationId: Fleet_GetVehicles
      parameters:
      - description: Whether or not to include deleted vehicles
        in: query
        name: IncludeDeleted
        schema:
          type: boolean
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetVehicle]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetVehicle]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetVehicle]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetVehicle]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetVehicle]]'
          description: OK
      summary: "Get a collection of vehicles that are under your organisation.  \r\
        \nDoes not require any special permission."
      tags:
      - Fleet
      x-accepts: application/json
  /Fleet/GetVehicleById:
    get:
      operationId: Fleet_GetVehicleById
      parameters:
      - description: The ID of the Vehicle you want to get
        in: query
        name: VehicleId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[FleetVehicle]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[FleetVehicle]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[FleetVehicle]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[FleetVehicle]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[FleetVehicle]'
          description: OK
      summary: "Get a particular vehicle.\r\nDoes not require any special permission."
      tags:
      - Fleet
      x-accepts: application/json
  /Fleet/CreateVehicle:
    post:
      operationId: Fleet_CreateVehicle
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertVehicleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertVehicleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertVehicleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertVehicleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertVehicleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertVehicleRequest'
        description: An Insert Vehicle Request object containing values for the new
          Vehicle to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a vehicle.  \r\nRequires the 'ManageFleet' permission."
      tags:
      - Fleet
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Fleet/UpdateVehicle:
    put:
      operationId: Fleet_UpdateVehicle
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveVehicleRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SaveVehicleRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SaveVehicleRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/SaveVehicleRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaveVehicleRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaveVehicleRequest'
        description: A Save Vehicle Request object containing updated fields.  Make
          sure to specify the Vehicle Id in the request object so that ChronoSheets
          knows which Vehicle to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Update a vehicle.  \r\nRequires the 'ManageFleet' permission."
      tags:
      - Fleet
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Fleet/DeleteVehicle:
    delete:
      operationId: Fleet_DeleteVehicle
      parameters:
      - description: The unique ID of the vehicle you wish to delete
        in: query
        name: VehicleId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Delete a vehicle from the fleet.\r\nRequires the 'ManageFleet' permission."
      tags:
      - Fleet
      x-accepts: application/json
  /GeoFencing/CreateGeofence:
    post:
      operationId: GeoFencing_CreateGeofence
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGeoFenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateGeoFenceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateGeoFenceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateGeoFenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateGeoFenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateGeoFenceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a geofencing with rules to be used for clock on/off automation.\r\
        \nRequires the 'ManageGeofencing' permission."
      tags:
      - GeoFencing
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /GeoFencing/UpdateGeofence:
    put:
      operationId: GeoFencing_UpdateGeofence
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGeoFenceRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateGeoFenceRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateGeoFenceRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateGeoFenceRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateGeoFenceRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateGeoFenceRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Updates a geofencing with rules to be used for clock on/off automation.\r\
        \nRequires the 'ManageGeofencing' permission."
      tags:
      - GeoFencing
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /GeoFencing/GetGeofenceById:
    get:
      operationId: GeoFencing_GetGeofenceById
      parameters:
      - description: The ID of the geofence you want to obtain
        in: query
        name: GeofenceId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
          description: OK
      summary: "Get a geofence by ID\r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - GeoFencing
      x-accepts: application/json
  /GeoFencing/DeleteGeofence:
    delete:
      operationId: GeoFencing_DeleteGeofence
      parameters:
      - description: Specify the geofence you want to delete with the geofence ID.
        in: query
        name: GeofenceId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Geofence]'
          description: OK
      summary: "Deletes a geofence.\r\nRequires the 'ManageGeofencing' permission."
      tags:
      - GeoFencing
      x-accepts: application/json
  /GeoFencing/GetGeofences:
    get:
      operationId: GeoFencing_GetGeofences
      parameters:
      - description: Number of records to skip
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Number of records to take
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[ExtendedGeofence]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[ExtendedGeofence]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[ExtendedGeofence]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[ExtendedGeofence]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[ExtendedGeofence]]'
          description: OK
      summary: "Get geofences belonging to your organisation\r\nRequires the 'SubmitTimesheets'\
        \ permission."
      tags:
      - GeoFencing
      x-accepts: application/json
  /GeoFencing/GetGeofencesBasicInfo:
    get:
      operationId: GeoFencing_GetGeofencesBasicInfo
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[BasicGeofence]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[BasicGeofence]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[BasicGeofence]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[BasicGeofence]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[BasicGeofence]]'
          description: OK
      summary: Gets a list of all geofences in your organisation, including just the
        name and ID.
      tags:
      - GeoFencing
      x-accepts: application/json
  /JobCodes/GetJobCodeById:
    get:
      operationId: JobCodes_GetJobCodeById
      parameters:
      - description: The ID of the JobCode you want to get
        in: query
        name: JobCodeId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[JobCode]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[JobCode]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[JobCode]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[JobCode]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[JobCode]'
          description: OK
      summary: "Get a particular job code by job code id.  \r\nRequires 'SubmitTimesheets'\
        \ or 'ManageJobsAndTasks' permissions."
      tags:
      - JobCodes
      x-accepts: application/json
  /JobCodes/GetJobCodes:
    get:
      operationId: JobCodes_GetJobCodes
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobCode]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobCode]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobCode]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobCode]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobCode]]'
          description: OK
      summary: "Get job codes for your organisation.  \r\nRequires 'SubmitTimesheets'\
        \ or 'ManageJobsAndTasks' permissions."
      tags:
      - JobCodes
      x-accepts: application/json
  /JobCodes/CreateJobCode:
    post:
      operationId: JobCodes_CreateJobCode
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertJobCodeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertJobCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertJobCodeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertJobCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertJobCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertJobCodeRequest'
        description: An Insert JobCode Request object containing values for the new
          JobCode to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a job code.  \r\nRequires the 'ManageJobsAndTask' permission."
      tags:
      - JobCodes
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /JobCodes/UpdateJobCode:
    put:
      operationId: JobCodes_UpdateJobCode
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateJobCodeRequest'
        description: A Update JobCode Request object containing updated fields.  Make
          sure to specify the JobCode Id in the request object so that ChronoSheets
          knows which JobCode to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Update a job code.  \r\nRequires the 'ManageJobsAndTask' permission."
      tags:
      - JobCodes
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /JobCodes/DeleteJobCode:
    delete:
      operationId: JobCodes_DeleteJobCode
      parameters:
      - description: The ID of the job code you want to delete
        in: query
        name: JobCodeId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Delete a job code.  \r\nRequires the 'ManageJobsAndTask' permission."
      tags:
      - JobCodes
      x-accepts: application/json
  /Organisation/UpdateOrganisation:
    put:
      operationId: Organisation_UpdateOrganisation
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateOrganisationRequest'
        description: An Update Organsation Request object containing updated fields.  Make
          sure to specify the Organsation Id in the request object so that ChronoSheets
          knows which Organsation to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateOrganisationResponse]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateOrganisationResponse]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateOrganisationResponse]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateOrganisationResponse]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateOrganisationResponse]'
          description: OK
      summary: "Update an organisation.  \r\nRequires 'OrganisationAdmin' permission."
      tags:
      - Organisation
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Organisation/GetOrganisation:
    get:
      operationId: Organisation_GetOrganisation
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Organisation]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Organisation]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Organisation]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Organisation]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Organisation]'
          description: OK
      summary: "Get your organisation.  \r\nRequires 'OrganisationAdmin' permission."
      tags:
      - Organisation
      x-accepts: application/json
  /OrganisationGroups/GetOrganisationGroups:
    get:
      operationId: OrganisationGroups_GetOrganisationGroups
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
          description: OK
      summary: "Get a collection of organisation groups that are under your organisation.\
        \  \r\nRequires the 'ManageOrganisationGroups', 'ManageJobsAndTask', 'ManageClientsAndProjects'\
        \ or 'ManageOrganisationUsers' permissions."
      tags:
      - OrganisationGroups
      x-accepts: application/json
  /OrganisationGroups/GetOrganisationGroup:
    get:
      operationId: OrganisationGroups_GetOrganisationGroup
      parameters:
      - description: The ID of the OrganisationGroup you want to get
        in: query
        name: OrganisationGroupId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[OrganisationGroup]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[OrganisationGroup]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[OrganisationGroup]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[OrganisationGroup]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[OrganisationGroup]'
          description: OK
      summary: "Get a particular organisation group.  \r\nRequires the 'ManageOrganisationGroups',\
        \ 'ManageJobsAndTask', 'ManageClientsAndProjects' or 'ManageOrganisationUsers'\
        \ permissions."
      tags:
      - OrganisationGroups
      x-accepts: application/json
  /OrganisationGroups/CreateOrganisationGroup:
    post:
      operationId: OrganisationGroups_CreateOrganisationGroup
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertOrganisationGroupRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertOrganisationGroupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertOrganisationGroupRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertOrganisationGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertOrganisationGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertOrganisationGroupRequest'
        description: An Insert OrganisationGroup Request object containing values
          for the new OrganisationGroup to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create an organisation group.  \r\nRequires the 'ManageOrganisationGroups'\
        \ permissions."
      tags:
      - OrganisationGroups
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /OrganisationGroups/UpdateOrganisationGroup:
    put:
      operationId: OrganisationGroups_UpdateOrganisationGroup
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveOrganisationGroupRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SaveOrganisationGroupRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SaveOrganisationGroupRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/SaveOrganisationGroupRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SaveOrganisationGroupRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SaveOrganisationGroupRequest'
        description: A Save OrganisationGroup Request object containing updated fields.  Make
          sure to specify the OrganisationGroup Id in the request object so that ChronoSheets
          knows which OrganisationGroup to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Update an organisation group.  \r\nRequires the 'ManageOrganisationGroups'\
        \ permissions."
      tags:
      - OrganisationGroups
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /OrganisationGroups/GetOrganisationGroupsForJob:
    get:
      operationId: OrganisationGroups_GetOrganisationGroupsForJob
      parameters:
      - description: The ID of the job
        in: query
        name: JobId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
          description: OK
      summary: "Get org groups for a particular job.  \r\nRequires the 'ManageOrganisationGroups',\
        \ 'ManageJobsAndTask', 'ManageClientsAndProjects' or 'ManageOrganisationUsers'\
        \ permissions."
      tags:
      - OrganisationGroups
      x-accepts: application/json
  /OrganisationGroups/GetOrganisationGroupsForVehicle:
    get:
      operationId: OrganisationGroups_GetOrganisationGroupsForVehicle
      parameters:
      - description: The ID of the vehicle
        in: query
        name: VehicleId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[OrganisationGroup]]'
          description: OK
      summary: "Get org groups for a particular vehicle.  \r\nRequires the 'ManageOrganisationGroups',\
        \ 'ManageFleet' or 'ManageOrganisationUsers' permissions."
      tags:
      - OrganisationGroups
      x-accepts: application/json
  /OrganisationGroups/DeleteOrganisationGroup:
    delete:
      operationId: OrganisationGroups_DeleteOrganisationGroup
      parameters:
      - in: query
        name: OrganisationGroupId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      tags:
      - OrganisationGroups
      x-accepts: application/json
  /OrganisationGroupUsers/GetOrganisationGroupUsers:
    get:
      operationId: OrganisationGroupUsers_GetOrganisationGroupUsers
      parameters:
      - description: An OrganisationGroup Id
        in: query
        name: orgGroupId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
          description: OK
      summary: "Get a collection of organisation group users that belong to an organisation\
        \ group.  \r\nRequires the 'ManageOrganisationGroups' or 'ManageOrganisationUsers'\
        \ permissions."
      tags:
      - OrganisationGroupUsers
      x-accepts: application/json
  /OrganisationGroupUsers/UpdateOrganisationGroupUsers:
    put:
      operationId: OrganisationGroupUsers_UpdateOrganisationGroupUsers
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrganisationGroupUsersRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetOrganisationGroupUsersRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SetOrganisationGroupUsersRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/SetOrganisationGroupUsersRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetOrganisationGroupUsersRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetOrganisationGroupUsersRequest'
        description: A request object specifying which users belong to an organisation
          group.  Make sure to specify the OrganisationGroup Id in the request object
          so that ChronoSheets knows which OrganisationGroup to update. CsvUserIds
          is a comma separated list of User Ids, e.g. 1,2,3,4
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Set the users who belong to an organisation group.  \r\nRequires the\
        \ 'ManageOrganisationGroups' permissions."
      tags:
      - OrganisationGroupUsers
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Projects/GetProjectsForClient:
    get:
      operationId: Projects_GetProjectsForClient
      parameters:
      - description: The ID of the client
        in: query
        name: ClientId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Project]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Project]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Project]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Project]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Project]]'
          description: OK
      summary: "Get projects for a particular client.  \r\nRequires the 'ManageClientsAndProjects'\
        \ or 'ManageJobsAndTask' permissions."
      tags:
      - Projects
      x-accepts: application/json
  /Projects/GetProjectById:
    get:
      operationId: Projects_GetProjectById
      parameters:
      - description: The ID of the Project you want to get
        in: query
        name: ProjectId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Project]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Project]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Project]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Project]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Project]'
          description: OK
      summary: "Get a project by its Id.  \r\nRequires the 'ManageClientsAndProjects'\
        \ or 'ManageJobsAndTask' permissions."
      tags:
      - Projects
      x-accepts: application/json
  /Projects/CreateProject:
    post:
      operationId: Projects_CreateProject
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertProjectRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertProjectRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertProjectRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertProjectRequest'
        description: An Insert Project Request object containing values for the new
          Project to create.  Make sure to specify a correct Client Id - this will
          be used to attach the new project under that client.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a project.  \r\nRequires the 'ManageClientsAndProjects' permission."
      tags:
      - Projects
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Projects/UpdateProject:
    put:
      operationId: Projects_UpdateProject
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProjectRequest'
        description: An Update Project Request object containing updated fields.  Make
          sure to specify the Project Id in the request object so that ChronoSheets
          knows which Project to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Update a project.  \r\nRequires the 'ManageClientsAndProjects' permission."
      tags:
      - Projects
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Reports/UserJobsOverTime:
    get:
      operationId: Reports_UserJobsOverTime
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobSeriesReportItem]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobSeriesReportItem]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobSeriesReportItem]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobSeriesReportItem]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[JobSeriesReportItem]]'
          description: OK
      summary: "Timeseries jobs data for the logged in user.  \r\nRequires the 'ViewOwnReports'\
        \ or 'SubmitTimesheets'."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetAllChartsDataUser:
    get:
      operationId: Reports_GetAllChartsDataUser
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
          description: OK
      summary: "Get Consolidated User Reports Data (Jobs, Tasks, Clients and Projects).\
        \  These are the user's own reports.  \r\nRequires the 'ViewOwnReports' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetAllChartsDataAdmin:
    get:
      operationId: Reports_GetAllChartsDataAdmin
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: A flag to indicate which report data you require.  Choose a particular
          set of data, or if you want all data use the 'NotForced' option.
        in: query
        name: ForceOnlyThisChart
        schema:
          enum:
          - NotForced
          - SeriesJobCodes
          - SeriesClients
          - SeriesProjects
          - SeriesTasks
          - TotalsClients
          - TotalsJobCodes
          - TotalsProjects
          - TotalsTasks
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[CombinedReportsData]'
          description: OK
      summary: "Get Consolidated Admin Reports Data (Jobs, Tasks, Clients and Projects).\
        \  These are the organisation wide reports, with data from potentially all\
        \ employees.  \r\nRequires the 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetRawDataAdmin:
    get:
      operationId: Reports_GetRawDataAdmin
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: Decide which column to sort on
        in: query
        name: Sort
        schema:
          enum:
          - EmailAddress
          - JobCode
          - TaskName
          - ClientName
          - ProjectName
          - StartDate
          - EndDate
          - SpanSeconds
          - Description
          - PayAmount
          - PayOvertimeAmount
          - TripCost
          - TripDistanceMeters
          - Username
          type: string
      - description: Decide which direction to sort the column
        in: query
        name: Order
        schema:
          enum:
          - Ascending
          - Descending
          type: string
      - description: Skip this many rows
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many rows
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[RawReportItem]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[RawReportItem]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[RawReportItem]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[RawReportItem]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[RawReportItem]]'
          description: OK
      summary: "Get Timesheets Raw Data.  This data details each timesheet record.\
        \  These are the organisation wide timesheet records, with data from potentially\
        \ all employees.  \r\nRequires the 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/ProjectCostingsAdmin:
    get:
      operationId: Reports_ProjectCostingsAdmin
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[ProjectCostingReportItem]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[ProjectCostingReportItem]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[ProjectCostingReportItem]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[ProjectCostingReportItem]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[ProjectCostingReportItem]]'
          description: OK
      summary: "Gets project cost estimations VS actual cost for date range and users.\
        \  \r\nRequires the 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetOrganisationTrips:
    get:
      operationId: Reports_GetOrganisationTrips
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: Skip this many items
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many items
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTrip]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTrip]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTrip]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTrip]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTrip]]'
          description: OK
      summary: "Reports on Organisation trips (GPS tracking from whole organisation).\
        \  \r\nRequires the 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetOrganisationTimesheetFileAttachments:
    get:
      operationId: Reports_GetOrganisationTimesheetFileAttachments
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: Skip this many items
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many items
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTimesheetFileAttachment]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTimesheetFileAttachment]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTimesheetFileAttachment]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTimesheetFileAttachment]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTimesheetFileAttachment]]'
          description: OK
      summary: "Reports on Organisation timesheet file attachments (files uploaded\
        \ and attached to timesheet records)\r\nRequires the 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetOrganisationTranscripts:
    get:
      operationId: Reports_GetOrganisationTranscripts
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: Skip this many items
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many items
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: Search the transcripts by keyword(s)
        in: query
        name: Keywords
        schema:
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
          description: OK
      summary: "Reports on Organisation transcripts (When an audio file is attached,\
        \ it will be automatically transcribed, these are the transcriptions)  \r\n\
        Requires the 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetOrgTripById:
    get:
      operationId: Reports_GetOrgTripById
      parameters:
      - description: The ID of the Trip you want to get
        in: query
        name: TripId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
          description: OK
      summary: "Get trip by Id, for reporting purposes.  \r\nRequires the 'ReportAdmin'\
        \ permission."
      tags:
      - Reports
      x-accepts: application/json
  /Reports/GetFleetSummaryAdmin:
    get:
      operationId: Reports_GetFleetSummaryAdmin
      parameters:
      - description: The start date for the date range.  Report data in the response
          is after this date
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date for the date range.  Report data in the response
          is before this date
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: A comma-separated list of user Ids, if you want to filter the
          report data to particular users.  If you want all, send a blank string.
        in: query
        name: UserIds
        schema:
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetSummaryReportItem]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetSummaryReportItem]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetSummaryReportItem]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetSummaryReportItem]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[FleetSummaryReportItem]]'
          description: OK
      summary: "Gets a summary report, which includes total distance travelled and\
        \ total running costs, for vehicles within your organisation\r\nRequires the\
        \ 'ReportAdmin' permission."
      tags:
      - Reports
      x-accepts: application/json
  /Tasks/GetTasks:
    get:
      operationId: Tasks_GetTasks
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
          description: OK
      summary: "Get tasks in your organisation. \r\nRequires the 'SubmitTimesheets'\
        \ or 'ManageJobsAndTask' permissions."
      tags:
      - Tasks
      x-accepts: application/json
  /Tasks/GetTaskById:
    get:
      operationId: Tasks_GetTaskById
      parameters:
      - description: The ID of the TimesheetTask you want to get
        in: query
        name: TaskId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetTask]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetTask]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetTask]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetTask]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[TimesheetTask]'
          description: OK
      summary: "Get a particular task by Id. \r\nRequires the 'SubmitTimesheets' or\
        \ 'ManageJobsAndTask' permissions."
      tags:
      - Tasks
      x-accepts: application/json
  /Tasks/GetTasksForJob:
    get:
      operationId: Tasks_GetTasksForJob
      parameters:
      - description: The ID of the job
        in: query
        name: JobId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[TimesheetTask]]'
          description: OK
      summary: "Get a collection of tasks for a particular Job, specified by JobId.\
        \  \r\nRequires the 'SubmitTimesheets' or 'ManageJobsAndTask' permissions."
      tags:
      - Tasks
      x-accepts: application/json
  /Tasks/CreateTask:
    post:
      operationId: Tasks_CreateTask
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertTaskRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertTaskRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertTaskRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertTaskRequest'
        description: An Insert Task Request object containing values for the new Task
          to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a task.  \r\nRequires the 'ManageJobsAndTask' permission."
      tags:
      - Tasks
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Tasks/UpdateTask:
    put:
      operationId: Tasks_UpdateTask
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
        description: An Update Task Request object containing updated fields.  Make
          sure to specify the Task Id in the request object so that ChronoSheets knows
          which Task to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Update a task.  \r\nRequires the 'ManageJobsAndTask' permission."
      tags:
      - Tasks
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Tasks/DeleteTask:
    delete:
      operationId: Tasks_DeleteTask
      parameters:
      - description: The ID of the Task you want to delete
        in: query
        name: TaskId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Delete a task.  \r\nRequires the 'ManageJobsAndTask' permission."
      tags:
      - Tasks
      x-accepts: application/json
  /TimesheetAutomation/CreateAutomationStep:
    post:
      operationId: TimesheetAutomation_CreateAutomationStep
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomationStepRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateAutomationStepRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateAutomationStepRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateAutomationStepRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAutomationStepRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAutomationStepRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Creates an automation step.  Timesheet automation is determined by\
        \ looking at steps taken by the user.  Create a step to log some automation\
        \ action, such as entering a geofence or tapping on an NFC badge.\r\nRequires\
        \ the 'SubmitTimesheets' permission."
      tags:
      - TimesheetAutomation
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /TimesheetAutomation/GetTimesheetAutomationAuditTrail:
    get:
      operationId: TimesheetAutomation_GetTimesheetAutomationAuditTrail
      parameters:
      - description: The ID of the Geofence
        in: query
        name: GeofenceId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: NfcId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: UserId
        required: true
        schema:
          format: int32
          type: integer
      - in: query
        name: Sort
        required: true
        schema:
          enum:
          - UserName
          - AutomationActionType
          - ClientDateTime
          - IsProcessed
          type: string
      - in: query
        name: Order
        required: true
        schema:
          enum:
          - Ascending
          - Descending
          type: string
      - description: Skip this many records
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many records
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetAutomationWithOrgAndGeofence]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetAutomationWithOrgAndGeofence]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetAutomationWithOrgAndGeofence]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetAutomationWithOrgAndGeofence]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[TimesheetAutomationWithOrgAndGeofence]]'
          description: OK
      summary: "Retrieve the timesheet automation / alerts for geofences activities\
        \ or NFC tap on/off.\r\nRequires the 'ManageGeofencing' permission."
      tags:
      - TimesheetAutomation
      x-accepts: application/json
  /Timesheets/CreateSingleTimesheet:
    post:
      operationId: Timesheets_CreateSingleTimesheet
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Timesheet'
          text/json:
            schema:
              $ref: '#/components/schemas/Timesheet'
          application/xml:
            schema:
              $ref: '#/components/schemas/Timesheet'
          text/xml:
            schema:
              $ref: '#/components/schemas/Timesheet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Timesheet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Timesheet'
        description: A Timesheet Request object containing values for the new Timesheet
          to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Inserts a single timesheet record.  \r\nRequires the 'SubmitTimesheets'\
        \ permission."
      tags:
      - Timesheets
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Timesheets/UpdateTimesheets:
    put:
      operationId: Timesheets_UpdateTimesheets
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateTimesheetRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/BatchUpdateTimesheetRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/BatchUpdateTimesheetRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/BatchUpdateTimesheetRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchUpdateTimesheetRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchUpdateTimesheetRequest'
        description: A BatchUpdateTimesheet Request object containing values for the
          new Timesheets to create or update.  If the timesheet Id is specified, then
          an update will be performed, else the timesheet record will be created.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Int32]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Int32]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Int32]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Int32]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Int32]]'
          description: OK
      summary: "Batch update timesheets.  \r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - Timesheets
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Timesheets/GetTimesheets:
    get:
      operationId: Timesheets_GetTimesheets
      parameters:
      - description: The start date of the date range
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The end date of the date range
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Timesheet]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Timesheet]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Timesheet]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Timesheet]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[Timesheet]]'
          description: OK
      summary: "Get timesheets between start and end dates.  Note: the date range\
        \ cannot exceed 24 hours.  This method is generally used to get timesheets\
        \ for a particular day.  \r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - Timesheets
      x-accepts: application/json
  /Timesheets/DeleteTimesheet:
    delete:
      operationId: Timesheets_DeleteTimesheet
      parameters:
      - description: The ID of the Timesheet you want to delete
        in: query
        name: TimesheetId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Delete a timesheet.  \r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - Timesheets
      x-accepts: application/json
  /Transcripts/GetMyTranscripts:
    get:
      operationId: Transcripts_GetMyTranscripts
      parameters:
      - description: The Start date of the date range.  Transcripts after this date
          will be obtained.
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The End date of the date range.  Transcripts before this date
          will be obtained.
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: Skip this many transcripts
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many transcripts
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: Search the text content of the transcript keywords
        in: query
        name: Keyword
        schema:
          type: string
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[OrgReportTranscript]]'
          description: OK
      summary: Get my file transcripts.  Get audio to text transcripts that you've
        created.
      tags:
      - Transcripts
      x-accepts: application/json
  /Transcripts/GetMyTranscript:
    get:
      operationId: Transcripts_GetMyTranscript
      parameters:
      - description: The ID of the file attachment that has a transcript.  It should
          be an audio file attachment.
        in: query
        name: FileAttachmentId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Transcription]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Transcription]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Transcription]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Transcription]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Transcription]'
          description: OK
      summary: Get an audio to text transcript for a particular audio file attachment
      tags:
      - Transcripts
      x-accepts: application/json
  /Trips/CreateTrip:
    post:
      operationId: Trips_CreateTrip
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateTripRequest'
        description: A Create Trip Request object containing values for the new Trip
          to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a new trip.  Important: create a timesheet record before calling\
        \ this, passing in the new timesheet record id as a reference.  \r\nRequires\
        \ the 'SubmitTimesheets' permission."
      tags:
      - Trips
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Trips/GetMyTripById:
    get:
      operationId: Trips_GetMyTripById
      parameters:
      - description: The ID of the Trip you want to get
        in: query
        name: TripId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Trip]'
          description: OK
      summary: "Get trip by Id.  \r\nRequires the 'ViewMyTrips' permission."
      tags:
      - Trips
      x-accepts: application/json
  /Trips/GetMyTrips:
    get:
      operationId: Trips_GetMyTrips
      parameters:
      - description: The Start date of the date range.  Trips after this date will
          be obtained.
        in: query
        name: StartDate
        required: true
        schema:
          format: date-time
          type: string
      - description: The End date of the date range.  Trips before this date will
          be obtained.
        in: query
        name: EndDate
        required: true
        schema:
          format: date-time
          type: string
      - description: Skip this many Trips
        in: query
        name: Skip
        schema:
          format: int32
          type: integer
      - description: Take this many Trips
        in: query
        name: Take
        schema:
          format: int32
          type: integer
      - description: Filter by a particular Vehicle (get trips made with a particular
          vehicle), specified by VehicleId
        in: query
        name: VehicleId
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[Trip]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[Trip]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[Trip]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[Trip]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponseForPaginated[List[Trip]]'
          description: OK
      summary: "Get my trips.  Get the GPS trips you've recorded and submitted.  \r\
        \nRequires the 'ViewMyTrips' permission."
      tags:
      - Trips
      x-accepts: application/json
  /UserJobFavourites/CreateJobFavourite:
    post:
      operationId: UserJobFavourites_CreateJobFavourite
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertUserJobFavouriteRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertUserJobFavouriteRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertUserJobFavouriteRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertUserJobFavouriteRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertUserJobFavouriteRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertUserJobFavouriteRequest'
        description: An Insert UserJobFavourite Request object containing values for
          the new UserJobFavourite to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a job favourite.  \r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - UserJobFavourites
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /UserJobFavourites/GetJobFavourites:
    get:
      operationId: UserJobFavourites_GetJobFavourites
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserJobFavourite]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserJobFavourite]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserJobFavourite]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserJobFavourite]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserJobFavourite]]'
          description: OK
      summary: "Get your job favourites.  \r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - UserJobFavourites
      x-accepts: application/json
  /UserJobFavourites/DeleteJobFavourite:
    delete:
      operationId: UserJobFavourites_DeleteJobFavourite
      parameters:
      - description: The ID of the Job for the Job Favourite you want to delete.
        in: query
        name: JobId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Delete a job favourite.  \r\nRequires the 'SubmitTimesheets' permission."
      tags:
      - UserJobFavourites
      x-accepts: application/json
  /UserPayRates/GetPayRates:
    get:
      operationId: UserPayRates_GetPayRates
      parameters:
      - description: The ID of the User for which you want to get UserHourlyRate objects
        in: query
        name: UserId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserHourlyRate]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserHourlyRate]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserHourlyRate]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserHourlyRate]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserHourlyRate]]'
          description: OK
      summary: "Get a collection of pay rates for a particular user, specified by\
        \ user id.  \r\nRequires the 'ManageOrganisationUsers' permission."
      tags:
      - UserPayRates
      x-accepts: application/json
  /UserPayRates/CreatePayRate:
    post:
      operationId: UserPayRates_CreatePayRate
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertUserHourlyRateRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertUserHourlyRateRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertUserHourlyRateRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertUserHourlyRateRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertUserHourlyRateRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertUserHourlyRateRequest'
        description: An Insert UserHourlyRate Request object containing values for
          the new UserHourlyRate to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Int32]'
          description: OK
      summary: "Create a new pay rate for a particular user, archiving the previous\
        \ pay rate.  \r\nRequires the 'ManageOrganisationUsers' permission."
      tags:
      - UserPayRates
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /UserProfile/DoLogin:
    put:
      operationId: UserProfile_DoLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoLoginRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/DoLoginRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/DoLoginRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/DoLoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DoLoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DoLoginRequest'
        description: A request object containing your username/email and password.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[DoLoginResponse]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[DoLoginResponse]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[DoLoginResponse]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[DoLoginResponse]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[DoLoginResponse]'
          description: OK
      summary: "Login to your ChronoSheets account and obtain an Auth Token which\
        \ you can use for other ChronoSheets API methods.  \r\nDoes not require any\
        \ special permissions."
      tags:
      - UserProfile
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /UserProfile/DoLogout:
    delete:
      operationId: UserProfile_DoLogout
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Logout of your ChronoSheets account.  This method ends and deletes\
        \ your active session.  \r\nDoes not require any special permissions."
      tags:
      - UserProfile
      x-accepts: application/json
  /UserProfile/GetMyProfile:
    get:
      operationId: UserProfile_GetMyProfile
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserProfile]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserProfile]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserProfile]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserProfile]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserProfile]'
          description: OK
      summary: "Get your own profile.  Use this method to obtain detailed information\
        \ about your ChronoSheets user profile.  \r\nDoes not require any special\
        \ permissions."
      tags:
      - UserProfile
      x-accepts: application/json
  /UserProfile/KeepSessionAlive:
    get:
      operationId: UserProfile_KeepSessionAlive
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Keep a session alive.  Use this method to keep a session active. \
        \ You could use this to 'ping' ChronoSheets every 'x' minutes to make sure\
        \ your Auth Token will keep working.  \r\nDoes not require any special permissions."
      tags:
      - UserProfile
      x-accepts: application/json
  /UserProfile/UpdateMyProfile:
    put:
      operationId: UserProfile_UpdateMyProfile
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateMyProfileRequest'
        description: An Update MyProfile Request object containing updated fields.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateProfileResponse]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateProfileResponse]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateProfileResponse]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateProfileResponse]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateProfileResponse]'
          description: OK
      summary: "Update your own profile.  Use this method to update your profile information\
        \ or update/change your password.  \r\nDoes not require any special permissions."
      tags:
      - UserProfile
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Users/GetTimesheetUsers:
    get:
      operationId: Users_GetTimesheetUsers
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UserForManagement]]'
          description: OK
      summary: "Get users accounts in your organisation.\r\nRequires the 'ManageOrganisationUsers'\
        \ or 'ManageOrganisationGroups' permissions."
      tags:
      - Users
      x-accepts: application/json
  /Users/CreateTimesheetUser:
    post:
      operationId: Users_CreateTimesheetUser
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/InsertUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/InsertUserRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/InsertUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/InsertUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/InsertUserRequest'
        description: An Insert User Request object containing values for the new User
          to create
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[InsertUserResponse]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[InsertUserResponse]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[InsertUserResponse]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[InsertUserResponse]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[InsertUserResponse]'
          description: OK
      summary: "Create a user account in your organisation.\r\nRequires the 'ManageOrganisationUsers'\
        \ permission."
      tags:
      - Users
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Users/UpdateTimesheetUser:
    put:
      operationId: Users_UpdateTimesheetUser
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
        description: A Update User Request object containing updated fields.  Make
          sure to specify the User Id in the request object so that ChronoSheets knows
          which User to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateUserResponse]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateUserResponse]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateUserResponse]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateUserResponse]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[UpdateUserResponse]'
          description: OK
      summary: "Update a user account.\r\nRequires the 'ManageOrganisationUsers' permission."
      tags:
      - Users
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
  /Users/GetTimesheetUser:
    get:
      operationId: Users_GetTimesheetUser
      parameters:
      - description: The User ID of the UserForManagement you want to get
        in: query
        name: UserId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserForManagement]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserForManagement]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserForManagement]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserForManagement]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[UserForManagement]'
          description: OK
      summary: "Get a particular user in your organisation.\r\nRequires the 'ManageOrganisationUsers'\
        \ or 'ManageOrganisationGroups' permissions."
      tags:
      - Users
      x-accepts: application/json
  /UsualHours/GetUsualHours:
    get:
      operationId: UsualHours_GetUsualHours
      parameters:
      - description: The ID of the User for which you want to get UsualHours for
        in: query
        name: UserId
        required: true
        schema:
          format: int32
          type: integer
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UsualHoursDay]]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UsualHoursDay]]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UsualHoursDay]]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UsualHoursDay]]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[List[UsualHoursDay]]'
          description: OK
      summary: "Get usual hours (rostered hours) for an employee.\r\nRequires the\
        \ 'ManageOrganisationUsers' permission."
      tags:
      - UsualHours
      x-accepts: application/json
  /UsualHours/SetUsualHours:
    put:
      operationId: UsualHours_SetUsualHours
      parameters:
      - description: The ChronoSheets Auth Token
        in: header
        name: x-chronosheets-auth
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsualHoursRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/SetUsualHoursRequest'
          application/xml:
            schema:
              $ref: '#/components/schemas/SetUsualHoursRequest'
          text/xml:
            schema:
              $ref: '#/components/schemas/SetUsualHoursRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsualHoursRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsualHoursRequest'
        description: A Set UsualHours Request object containing updated data.  Make
          sure to specify the Day types in the request object so that ChronoSheets
          knows which Days to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/json:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            application/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            text/xml:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
            multipart/form-data:
              schema:
                $ref: '#/components/schemas/ApiResponse[Boolean]'
          description: OK
      summary: "Set usual hours (rostered hours) for an employee.\r\nRequires the\
        \ 'ManageOrganisationUsers' permission."
      tags:
      - UsualHours
      x-codegen-request-body-name: request
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    ApiResponse[List[AggregateClient]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - ClientState: ClientState
          PersonOfContact: PersonOfContact
          OrganisationId: 2
          ProjectCount: 7
          ClientProjects:
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ProjectName: ProjectName
            OrganisationId: 1
            ClientId: 6
            Id: 0
            EndDate: 2000-01-23T04:56:07.000+00:00
            CostEstimation: 5.962133916683182
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ProjectName: ProjectName
            OrganisationId: 1
            ClientId: 6
            Id: 0
            EndDate: 2000-01-23T04:56:07.000+00:00
            CostEstimation: 5.962133916683182
          ClientName: ClientName
          ClientPostCode: ClientPostCode
          ClientAddressLine2: ClientAddressLine2
          ClientAddressLine1: ClientAddressLine1
          ClientMobileNumber: ClientMobileNumber
          ClientWebURL: ClientWebURL
          Id: 5
          ClientPhoneNumber: ClientPhoneNumber
          ClientEmailAddress: ClientEmailAddress
          ClientSuburb: ClientSuburb
        - ClientState: ClientState
          PersonOfContact: PersonOfContact
          OrganisationId: 2
          ProjectCount: 7
          ClientProjects:
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ProjectName: ProjectName
            OrganisationId: 1
            ClientId: 6
            Id: 0
            EndDate: 2000-01-23T04:56:07.000+00:00
            CostEstimation: 5.962133916683182
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ProjectName: ProjectName
            OrganisationId: 1
            ClientId: 6
            Id: 0
            EndDate: 2000-01-23T04:56:07.000+00:00
            CostEstimation: 5.962133916683182
          ClientName: ClientName
          ClientPostCode: ClientPostCode
          ClientAddressLine2: ClientAddressLine2
          ClientAddressLine1: ClientAddressLine1
          ClientMobileNumber: ClientMobileNumber
          ClientWebURL: ClientWebURL
          Id: 5
          ClientPhoneNumber: ClientPhoneNumber
          ClientEmailAddress: ClientEmailAddress
          ClientSuburb: ClientSuburb
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/AggregateClient'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    AggregateClient:
      example:
        ClientState: ClientState
        PersonOfContact: PersonOfContact
        OrganisationId: 2
        ProjectCount: 7
        ClientProjects:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          OrganisationId: 1
          ClientId: 6
          Id: 0
          EndDate: 2000-01-23T04:56:07.000+00:00
          CostEstimation: 5.962133916683182
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          OrganisationId: 1
          ClientId: 6
          Id: 0
          EndDate: 2000-01-23T04:56:07.000+00:00
          CostEstimation: 5.962133916683182
        ClientName: ClientName
        ClientPostCode: ClientPostCode
        ClientAddressLine2: ClientAddressLine2
        ClientAddressLine1: ClientAddressLine1
        ClientMobileNumber: ClientMobileNumber
        ClientWebURL: ClientWebURL
        Id: 5
        ClientPhoneNumber: ClientPhoneNumber
        ClientEmailAddress: ClientEmailAddress
        ClientSuburb: ClientSuburb
      properties:
        ClientProjects:
          description: A list of projects that are under this client
          items:
            $ref: '#/components/schemas/AggregateProject'
          type: array
        Id:
          description: The ID of the client
          format: int32
          type: integer
        OrganisationId:
          description: The ID of your organisation
          format: int32
          type: integer
        ClientName:
          description: The name of the client
          type: string
        ClientAddressLine1:
          description: The address line 1 of the client
          type: string
        ClientAddressLine2:
          description: The address line 2 of the client
          type: string
        ClientSuburb:
          description: The address suburb of the client
          type: string
        ClientState:
          description: The address state of the client
          type: string
        ClientPostCode:
          description: The postcode of the client
          type: string
        PersonOfContact:
          description: The contact person working under the client
          type: string
        ClientPhoneNumber:
          description: The phone number of the client
          type: string
        ClientMobileNumber:
          description: The mobile phone number of the client
          type: string
        ClientEmailAddress:
          description: The email address of the client
          type: string
        ClientWebURL:
          description: The website URL of the client
          type: string
        ProjectCount:
          description: The number of projects under the client
          format: int32
          type: integer
      type: object
    AggregateProject:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ProjectName: ProjectName
        OrganisationId: 1
        ClientId: 6
        Id: 0
        EndDate: 2000-01-23T04:56:07.000+00:00
        CostEstimation: 5.962133916683182
      properties:
        Id:
          description: The ID of the project
          format: int32
          type: integer
        ClientId:
          description: The ID of the client that this project is assigned to
          format: int32
          type: integer
        OrganisationId:
          description: The ID of your organisation
          format: int32
          type: integer
        ProjectName:
          description: The name of the project (can be viewed in PROJECT TIMELINES)
          type: string
        CostEstimation:
          description: The estimated cost of the project (can be viewed in PROJECT
            TIMELINES)
          format: double
          type: number
        StartDate:
          description: The start date of the project (can be viewed in PROJECT TIMELINES)
          format: date-time
          type: string
        EndDate:
          description: The end date of the project (can be viewed in PROJECT TIMELINES)
          format: date-time
          type: string
      type: object
    ApiResponse[List[AggregateJobCode]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - Project: Project
          AvailableTasks:
          - IsDeleted: true
            Label: Label
            Id: 0
          - IsDeleted: true
            Label: Label
            Id: 0
          IsDeleted: true
          PermittedEmployees:
          - 6
          - 6
          ProjectId: 5
          OrganisationId: 2
          ClientId: 5
          Id: 1
          Client: Client
          Code: Code
        - Project: Project
          AvailableTasks:
          - IsDeleted: true
            Label: Label
            Id: 0
          - IsDeleted: true
            Label: Label
            Id: 0
          IsDeleted: true
          PermittedEmployees:
          - 6
          - 6
          ProjectId: 5
          OrganisationId: 2
          ClientId: 5
          Id: 1
          Client: Client
          Code: Code
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/AggregateJobCode'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    AggregateJobCode:
      example:
        Project: Project
        AvailableTasks:
        - IsDeleted: true
          Label: Label
          Id: 0
        - IsDeleted: true
          Label: Label
          Id: 0
        IsDeleted: true
        PermittedEmployees:
        - 6
        - 6
        ProjectId: 5
        OrganisationId: 2
        ClientId: 5
        Id: 1
        Client: Client
        Code: Code
      properties:
        AvailableTasks:
          description: The list of available tasks under this job code
          items:
            $ref: '#/components/schemas/AggregateJobTask'
          type: array
        PermittedEmployees:
          description: The list of employee IDs that are permitted to record timesheets
            with this job code (empty means everyone)
          items:
            format: int32
            type: integer
          type: array
        Id:
          description: The ID of the job code (not the code itself)
          format: int32
          type: integer
        Code:
          description: The job code itself
          type: string
        Client:
          description: The name of the client
          type: string
        ClientId:
          description: The ID of the client
          format: int32
          type: integer
        Project:
          description: The name of the project
          type: string
        ProjectId:
          description: The ID of the project
          format: int32
          type: integer
        OrganisationId:
          description: Your organisation ID
          format: int32
          type: integer
        IsDeleted:
          description: A flag indicating whether or not the job code has been marked
            as deleted
          type: boolean
      type: object
    AggregateJobTask:
      example:
        IsDeleted: true
        Label: Label
        Id: 0
      properties:
        Id:
          description: The Id of the task
          format: int32
          type: integer
        Label:
          description: The label of the task
          type: string
        IsDeleted:
          description: A flag indicating that this task has been marked as deleted
          type: boolean
      type: object
    ApiResponse[List[Client]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - ClientState: ClientState
          PersonOfContact: PersonOfContact
          OrganisationId: 6
          ProjectCount: 1
          ClientName: ClientName
          ClientPostCode: ClientPostCode
          ClientAddressLine2: ClientAddressLine2
          ClientAddressLine1: ClientAddressLine1
          ClientMobileNumber: ClientMobileNumber
          ClientWebURL: ClientWebURL
          Id: 0
          ClientPhoneNumber: ClientPhoneNumber
          ClientEmailAddress: ClientEmailAddress
          ClientSuburb: ClientSuburb
        - ClientState: ClientState
          PersonOfContact: PersonOfContact
          OrganisationId: 6
          ProjectCount: 1
          ClientName: ClientName
          ClientPostCode: ClientPostCode
          ClientAddressLine2: ClientAddressLine2
          ClientAddressLine1: ClientAddressLine1
          ClientMobileNumber: ClientMobileNumber
          ClientWebURL: ClientWebURL
          Id: 0
          ClientPhoneNumber: ClientPhoneNumber
          ClientEmailAddress: ClientEmailAddress
          ClientSuburb: ClientSuburb
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/Client'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    Client:
      example:
        ClientState: ClientState
        PersonOfContact: PersonOfContact
        OrganisationId: 6
        ProjectCount: 1
        ClientName: ClientName
        ClientPostCode: ClientPostCode
        ClientAddressLine2: ClientAddressLine2
        ClientAddressLine1: ClientAddressLine1
        ClientMobileNumber: ClientMobileNumber
        ClientWebURL: ClientWebURL
        Id: 0
        ClientPhoneNumber: ClientPhoneNumber
        ClientEmailAddress: ClientEmailAddress
        ClientSuburb: ClientSuburb
      properties:
        Id:
          description: The ID of the client
          format: int32
          type: integer
        OrganisationId:
          description: The ID of your organisation
          format: int32
          type: integer
        ClientName:
          description: The name of the client
          type: string
        ClientAddressLine1:
          description: The address line 1 of the client
          type: string
        ClientAddressLine2:
          description: The address line 2 of the client
          type: string
        ClientSuburb:
          description: The address suburb of the client
          type: string
        ClientState:
          description: The address state of the client
          type: string
        ClientPostCode:
          description: The postcode of the client
          type: string
        PersonOfContact:
          description: The contact person working under the client
          type: string
        ClientPhoneNumber:
          description: The phone number of the client
          type: string
        ClientMobileNumber:
          description: The mobile phone number of the client
          type: string
        ClientEmailAddress:
          description: The email address of the client
          type: string
        ClientWebURL:
          description: The website URL of the client
          type: string
        ProjectCount:
          description: The number of projects under the client
          format: int32
          type: integer
      type: object
    ApiResponse[Client]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          ClientState: ClientState
          PersonOfContact: PersonOfContact
          OrganisationId: 6
          ProjectCount: 1
          ClientName: ClientName
          ClientPostCode: ClientPostCode
          ClientAddressLine2: ClientAddressLine2
          ClientAddressLine1: ClientAddressLine1
          ClientMobileNumber: ClientMobileNumber
          ClientWebURL: ClientWebURL
          Id: 0
          ClientPhoneNumber: ClientPhoneNumber
          ClientEmailAddress: ClientEmailAddress
          ClientSuburb: ClientSuburb
      properties:
        Data:
          $ref: '#/components/schemas/Client'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertClientRequest:
      description: Fields for inserting a new Client
      example:
        ClientState: ClientState
        PersonOfContact: PersonOfContact
        ClientName: ClientName
        ClientPostCode: ClientPostCode
        ClientAddressLine2: ClientAddressLine2
        ClientAddressLine1: ClientAddressLine1
        ClientMobileNumber: ClientMobileNumber
        ClientWebURL: ClientWebURL
        ClientPhoneNumber: ClientPhoneNumber
        ClientEmailAddress: ClientEmailAddress
        ClientSuburb: ClientSuburb
      properties:
        ClientName:
          description: The name of the Client
          type: string
        ClientAddressLine1:
          description: Address line 1 of the Client
          type: string
        ClientAddressLine2:
          description: Address line 2 of the Client
          type: string
        ClientSuburb:
          description: The suburb of the Client's address
          type: string
        ClientState:
          description: The state of the Client's address
          type: string
        ClientPostCode:
          description: The post code of the Client's address
          type: string
        PersonOfContact:
          description: The name of the contact working with the Client
          type: string
        ClientPhoneNumber:
          description: The phone number of the Client
          type: string
        ClientMobileNumber:
          description: The mobile phone number of the Client
          type: string
        ClientEmailAddress:
          description: The email address of the Client
          type: string
        ClientWebURL:
          description: The Client's website URL
          type: string
      type: object
    ApiResponse[Int32]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data: 0
      properties:
        Data:
          description: The main Data of the response
          format: int32
          type: integer
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    SaveClientRequest:
      description: Fields used to save a Client
      example:
        ClientState: ClientState
        PersonOfContact: PersonOfContact
        ClientName: ClientName
        ClientPostCode: ClientPostCode
        ClientAddressLine2: ClientAddressLine2
        ClientAddressLine1: ClientAddressLine1
        ClientMobileNumber: ClientMobileNumber
        ClientWebURL: ClientWebURL
        Id: 0
        ClientPhoneNumber: ClientPhoneNumber
        ClientEmailAddress: ClientEmailAddress
        ClientSuburb: ClientSuburb
      properties:
        Id:
          description: The Id of the Client
          format: int32
          type: integer
        ClientName:
          description: The name of the Client
          type: string
        ClientAddressLine1:
          description: Address line 1 of the Client
          type: string
        ClientAddressLine2:
          description: Address line 2 of the Client
          type: string
        ClientSuburb:
          description: The suburb of the Client's address
          type: string
        ClientState:
          description: The state of the Client's address
          type: string
        ClientPostCode:
          description: The post code of the Client's address
          type: string
        PersonOfContact:
          description: The name of the contact working with the Client
          type: string
        ClientPhoneNumber:
          description: The phone number of the Client
          type: string
        ClientMobileNumber:
          description: The mobile phone number of the Client
          type: string
        ClientEmailAddress:
          description: The email address of the Client
          type: string
        ClientWebURL:
          description: The Client's website URL
          type: string
      type: object
    ApiResponse[Boolean]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data: true
      properties:
        Data:
          description: The main Data of the response
          type: boolean
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ApiResponseForPaginated[List[TimesheetFileAttachment]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - TimesheetStart: 2000-01-23T04:56:07.000+00:00
          TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          DocumentS3SignedUrl: DocumentS3SignedUrl
          TimesheetId: 6
          Latitude: 2.3021358869347655
          AudioDurationSeconds: 3
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 9
          Longitude: 7.061401241503109
          FileAttachmentId: 1
          ImageMediumFilePath: ImageMediumFilePath
          OrgId: 5
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          NonImageFilePath: NonImageFilePath
          Notes: Notes
          DateUploaded: 2000-01-23T04:56:07.000+00:00
        - TimesheetStart: 2000-01-23T04:56:07.000+00:00
          TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          DocumentS3SignedUrl: DocumentS3SignedUrl
          TimesheetId: 6
          Latitude: 2.3021358869347655
          AudioDurationSeconds: 3
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 9
          Longitude: 7.061401241503109
          FileAttachmentId: 1
          ImageMediumFilePath: ImageMediumFilePath
          OrgId: 5
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          NonImageFilePath: NonImageFilePath
          Notes: Notes
          DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/TimesheetFileAttachment'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    TimesheetFileAttachment:
      description: A file attachment attached to a timesheet
      example:
        TimesheetStart: 2000-01-23T04:56:07.000+00:00
        TimesheetEnd: 2000-01-23T04:56:07.000+00:00
        AttachmentType: Image
        DateImageCaptured: 2000-01-23T04:56:07.000+00:00
        OriginalFileName: OriginalFileName
        ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
        DocumentS3SignedUrl: DocumentS3SignedUrl
        TimesheetId: 6
        Latitude: 2.3021358869347655
        AudioDurationSeconds: 3
        ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
        ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
        StorageAllocationBytes: 9
        Longitude: 7.061401241503109
        FileAttachmentId: 1
        ImageMediumFilePath: ImageMediumFilePath
        OrgId: 5
        ImageSmallFilePath: ImageSmallFilePath
        MobilePlatform: Unknown
        ImageLargeFilePath: ImageLargeFilePath
        UserId: 5
        NonImageFilePath: NonImageFilePath
        Notes: Notes
        DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        TimesheetId:
          description: The ID of the timesheet this attachment is attached to.
          format: int32
          type: integer
        DocumentS3SignedUrl:
          description: The limited use signed URL for the document (if it's not an
            image).  This URL is unique and will eventually expire.  If the attachment
            is an image, then this won't be set.
          type: string
        ImageLargeS3SignedUrl:
          description: The limited use signed URL for the large version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        ImageMediumS3SignedUrl:
          description: The limited use signed URL for the medium version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        ImageSmallS3SignedUrl:
          description: The limited use signed URL for the small version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        TimesheetStart:
          description: The start date and time of the timesheet that this attachment
            is attached to
          format: date-time
          type: string
        TimesheetEnd:
          description: The end date and time of the timesheet that this attachment
            is attached to
          format: date-time
          type: string
        FileAttachmentId:
          description: The ID of the file attachment
          format: int32
          type: integer
        UserId:
          description: The ID of the user who attached the file
          format: int32
          type: integer
        OrgId:
          description: The ID of the organisation that owns the file and employs the
            employee
          format: int32
          type: integer
        MobilePlatform:
          description: The mobile platform that was used to attach the file
          enum:
          - Unknown
          - iOS
          - Android
          type: string
        AttachmentType:
          description: The type of file attachment
          enum:
          - Image
          - WordDoc
          - Pdf
          - MSSpreadSheet
          - MSPowerPoint
          - RichTextFormat
          - ZipFile
          - Other
          - Audio
          type: string
        Notes:
          description: Any notes regarding the file attachment
          type: string
        NonImageFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            if it's not an image.  If the attachment is an image then this won't be
            set.
          type: string
        ImageLargeFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the large version of the
            image.
          type: string
        ImageMediumFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the medium version of the
            image.
          type: string
        ImageSmallFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the small version of the
            image.
          type: string
        OriginalFileName:
          description: The original file name of the attachment
          type: string
        Latitude:
          description: Meta-data indicating the latitude of the file attachment.  If
            the attachment is an image, this data originates from the meta data inside
            the image file.
          format: double
          type: number
        Longitude:
          description: Meta-data indicating the longitude of the file attachment.  If
            the attachment is an image, this data originates from the meta data inside
            the image file.
          format: double
          type: number
        DateUploaded:
          description: The date and time the attachment was uploaded.  Time is in
            UTC.
          format: date-time
          type: string
        DateImageCaptured:
          description: The original date and time the image was captured, if it was
            an image.  This data originates from the meta data inside the image file.
          format: date-time
          type: string
        StorageAllocationBytes:
          description: The number of bytes allocated for storing the file attachment.
          format: int64
          type: integer
        AudioDurationSeconds:
          description: If the attachment was an audio file, this field indicates the
            duration of the audio file in seconds.  This data originates from the
            meta data inside the audio file.
          format: int32
          type: integer
      type: object
    ApiResponse[TimesheetFileAttachment]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          TimesheetStart: 2000-01-23T04:56:07.000+00:00
          TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          DocumentS3SignedUrl: DocumentS3SignedUrl
          TimesheetId: 6
          Latitude: 2.3021358869347655
          AudioDurationSeconds: 3
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 9
          Longitude: 7.061401241503109
          FileAttachmentId: 1
          ImageMediumFilePath: ImageMediumFilePath
          OrgId: 5
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          NonImageFilePath: NonImageFilePath
          Notes: Notes
          DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        Data:
          $ref: '#/components/schemas/TimesheetFileAttachment'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ApiResponse[List[FleetVehicle]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - IsDeleted: true
          Year: Year
          PermittedEmployees:
          - 5
          - 5
          OrganisationId: 6
          Model: Model
          Make: Make
          Id: 0
          CostPerKilometer: 1.4658129805029452
          LicencePlateNumber: LicencePlateNumber
          Name: Name
        - IsDeleted: true
          Year: Year
          PermittedEmployees:
          - 5
          - 5
          OrganisationId: 6
          Model: Model
          Make: Make
          Id: 0
          CostPerKilometer: 1.4658129805029452
          LicencePlateNumber: LicencePlateNumber
          Name: Name
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/FleetVehicle'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    FleetVehicle:
      description: A vehicle within the fleet
      example:
        IsDeleted: true
        Year: Year
        PermittedEmployees:
        - 5
        - 5
        OrganisationId: 6
        Model: Model
        Make: Make
        Id: 0
        CostPerKilometer: 1.4658129805029452
        LicencePlateNumber: LicencePlateNumber
        Name: Name
      properties:
        Id:
          description: The ID of the vehicle
          format: int32
          type: integer
        OrganisationId:
          description: The ID of the organisation managing the vehicle
          format: int32
          type: integer
        Name:
          description: A name given to the vehicle
          type: string
        CostPerKilometer:
          description: The cost, in dollars, of running the vehicle over one kilometer
          format: double
          type: number
        Make:
          description: The make of the vehicle
          type: string
        Model:
          description: The model of the vehicle
          type: string
        Year:
          description: The year the vehicle was manufactured
          type: string
        LicencePlateNumber:
          description: The licence plate number of the vehicle
          type: string
        IsDeleted:
          description: Whether or not the vehicle is deleted
          type: boolean
        PermittedEmployees:
          description: An array of employee IDs that are permitted to use the vehicle
          items:
            format: int32
            type: integer
          type: array
      type: object
    ApiResponse[FleetVehicle]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          IsDeleted: true
          Year: Year
          PermittedEmployees:
          - 5
          - 5
          OrganisationId: 6
          Model: Model
          Make: Make
          Id: 0
          CostPerKilometer: 1.4658129805029452
          LicencePlateNumber: LicencePlateNumber
          Name: Name
      properties:
        Data:
          $ref: '#/components/schemas/FleetVehicle'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertVehicleRequest:
      description: Fields for inserting a new Vehicle
      example:
        Year: Year
        Model: Model
        Make: Make
        CostPerKilometer: 0.8008281904610115
        LicencePlateNumber: LicencePlateNumber
        Name: Name
        LinkedOrgGroupIds:
        - 6
        - 6
      properties:
        Name:
          description: The Name of the Vehicle
          type: string
        CostPerKilometer:
          description: The fuel cost / running cost of the Vehicle, measured per kilometer
          format: double
          type: number
        Make:
          description: The make of the Vehicle
          type: string
        Model:
          description: The model of the Vehicle
          type: string
        Year:
          description: The year the Vehicle was made
          type: string
        LicencePlateNumber:
          description: The Licence Plate Number of the Vehicle
          type: string
        LinkedOrgGroupIds:
          description: Optionally restrict this Vehicle to only be available to employees
            within these Organisation Groups
          items:
            format: int32
            type: integer
          type: array
      type: object
    SaveVehicleRequest:
      description: Fields for saving an existing Vehicle
      example:
        IsDeleted: true
        Year: Year
        Model: Model
        Make: Make
        Id: 0
        CostPerKilometer: 6.027456183070403
        LicencePlateNumber: LicencePlateNumber
        Name: Name
        LinkedOrgGroupIds:
        - 1
        - 1
      properties:
        Id:
          description: The Id of the Vehicle that is being updated
          format: int32
          type: integer
        Name:
          description: The Name of the Vehicle
          type: string
        CostPerKilometer:
          description: The fuel cost / running cost of the Vehicle, measured per kilometer
          format: double
          type: number
        Make:
          description: The make of the Vehicle
          type: string
        Model:
          description: The model of the Vehicle
          type: string
        Year:
          description: The year the Vehicle was made
          type: string
        LicencePlateNumber:
          description: The Licence Plate Number of the Vehicle
          type: string
        LinkedOrgGroupIds:
          description: Optionally restrict this Vehicle to only be available to employees
            within these Organisation Groups
          items:
            format: int32
            type: integer
          type: array
        IsDeleted:
          description: Whether or not this Vehicle is to be marked as deleted
          type: boolean
      type: object
    CreateGeoFenceRequest:
      description: A request object for creating a new geofence
      example:
        EndTimeMinute: 3
        FenceCoordinates:
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        TriggerTaskId: 5
        TriggerSettings: None
        StartTimeMinute: 7
        StartTimeHour: 2
        TriggerJobCodeId: 1
        AlertSettings: None
        SendAlertToOrgGroupId: 5
        EndTimeHour: 9
        Name: Name
      properties:
        Name:
          description: The name of the geo fence
          type: string
        FenceCoordinates:
          description: A list of coordinates specifying the geofence region
          items:
            $ref: '#/components/schemas/BasicCoordinate'
          type: array
        TriggerJobCodeId:
          description: The job code to be used when the person enters/leaves the geofence
          format: int32
          type: integer
        TriggerTaskId:
          description: The task to be used when the person enters/leaves the geofence
          format: int32
          type: integer
        SendAlertToOrgGroupId:
          description: Send an alert to a user, specified by their user ID
          format: int32
          type: integer
        AlertSettings:
          description: Define when you want the alerts to be sent
          enum:
          - None
          - SendWhenEntering
          - SendWhenExiting
          - SendWhenEnteringOrExiting
          type: string
        TriggerSettings:
          description: Define how to you want to trigger the timesheet automation
          enum:
          - None
          - StartTimesheetWhenEntering
          - StopTimesheetWhenEntering
          - StartOnEnterStopOnLeave
          type: string
        StartTimeHour:
          description: The start hour in which this geofence should apply.  After
            this time, the geofence will be active.
          format: int32
          type: integer
        StartTimeMinute:
          description: The start minute in which this geofence should apply.  After
            this time, the geofence will be active.
          format: int32
          type: integer
        EndTimeHour:
          description: The end hour in which this geofence will stop applying.  After
            this time, the geofence will be inactive.
          format: int32
          type: integer
        EndTimeMinute:
          description: The end minute in which this geofence will stop applying.  After
            this time, the geofence will be inactive.
          format: int32
          type: integer
      type: object
    BasicCoordinate:
      example:
        Latitude: 0.8008281904610115
        Longitude: 6.027456183070403
      properties:
        Latitude:
          format: double
          type: number
        Longitude:
          format: double
          type: number
      type: object
    UpdateGeoFenceRequest:
      description: A request object for updating a new geofence
      example:
        EndTimeMinute: 9
        FenceCoordinates:
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        TriggerTaskId: 1
        TriggerSettings: None
        StartTimeMinute: 2
        StartTimeHour: 5
        GeofenceId: 0
        TriggerJobCodeId: 6
        AlertSettings: None
        SendAlertToOrgGroupId: 5
        EndTimeHour: 7
        Name: Name
      properties:
        GeofenceId:
          description: The ID of the geofence you want to update
          format: int32
          type: integer
        Name:
          description: The name of the geo fence
          type: string
        FenceCoordinates:
          description: A list of coordinates specifying the geofence region
          items:
            $ref: '#/components/schemas/BasicCoordinate'
          type: array
        TriggerJobCodeId:
          description: The job code to be used when the person enters/leaves the geofence
          format: int32
          type: integer
        TriggerTaskId:
          description: The task to be used when the person enters/leaves the geofence
          format: int32
          type: integer
        SendAlertToOrgGroupId:
          description: Send an alert to a user, specified by their user ID
          format: int32
          type: integer
        AlertSettings:
          description: Define when you want the alerts to be sent
          enum:
          - None
          - SendWhenEntering
          - SendWhenExiting
          - SendWhenEnteringOrExiting
          type: string
        TriggerSettings:
          description: Define how to you want to trigger the timesheet automation
          enum:
          - None
          - StartTimesheetWhenEntering
          - StopTimesheetWhenEntering
          - StartOnEnterStopOnLeave
          type: string
        StartTimeHour:
          description: The start hour in which this geofence should apply.  After
            this time, the geofence will be active.
          format: int32
          type: integer
        StartTimeMinute:
          description: The start minute in which this geofence should apply.  After
            this time, the geofence will be active.
          format: int32
          type: integer
        EndTimeHour:
          description: The end hour in which this geofence will stop applying.  After
            this time, the geofence will be inactive.
          format: int32
          type: integer
        EndTimeMinute:
          description: The end minute in which this geofence will stop applying.  After
            this time, the geofence will be inactive.
          format: int32
          type: integer
      type: object
    ApiResponse[Geofence]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          EndTimeMinute: 4
          GeoFencingId: 0
          TriggerTaskId: 2
          StartTimeMinute: 3
          Coordinates:
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          CreatedAt: 2000-01-23T04:56:07.000+00:00
          StartTimeHour: 9
          AlertToOrgGroupId: 7
          LastUpdatedByUserId: 5
          UpdatedAt: 2000-01-23T04:56:07.000+00:00
          Name: Name
          LocationName: LocationName
          OrgId: 6
          CreatedByUserId: 1
          TriggerSettings: None
          TriggerJobCodeId: 5
          AlertSettings: None
          EndTimeHour: 2
      properties:
        Data:
          $ref: '#/components/schemas/Geofence'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    Geofence:
      description: A geofence
      example:
        EndTimeMinute: 4
        GeoFencingId: 0
        TriggerTaskId: 2
        StartTimeMinute: 3
        Coordinates:
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        StartTimeHour: 9
        AlertToOrgGroupId: 7
        LastUpdatedByUserId: 5
        UpdatedAt: 2000-01-23T04:56:07.000+00:00
        Name: Name
        LocationName: LocationName
        OrgId: 6
        CreatedByUserId: 1
        TriggerSettings: None
        TriggerJobCodeId: 5
        AlertSettings: None
        EndTimeHour: 2
      properties:
        GeoFencingId:
          description: The ID of the geofence
          format: int32
          type: integer
        OrgId:
          description: The ID of the organisation owning the geofence record
          format: int32
          type: integer
        CreatedByUserId:
          description: The ID of the user/employee who created the geofence
          format: int32
          type: integer
        LastUpdatedByUserId:
          description: The ID of the user/employee who last updated the geofence
          format: int32
          type: integer
        Name:
          description: A descriptive name of the geofence
          type: string
        LocationName:
          description: The name of the approx. location of the geofence
          type: string
        Coordinates:
          description: A list of co-ordinates specifying the geofence
          items:
            $ref: '#/components/schemas/BasicCoordinate'
          type: array
        CreatedAt:
          description: The date and time the geofence was created.  Time is in UTC.
          format: date-time
          type: string
        UpdatedAt:
          description: The date and time the geofence was updated last.  Time is in
            UTC.
          format: date-time
          type: string
        TriggerJobCodeId:
          description: The ID of the job code used when the employee enters/exits
            the geofence
          format: int32
          type: integer
        TriggerTaskId:
          description: The ID of the task used when the employee enters/exits the
            geofence
          format: int32
          type: integer
        TriggerSettings:
          description: The settings for triggering actions
          enum:
          - None
          - StartTimesheetWhenEntering
          - StopTimesheetWhenEntering
          - StartOnEnterStopOnLeave
          type: string
        AlertToOrgGroupId:
          description: The organisation group that will be notified when the geofence
            is triggered
          format: int32
          type: integer
        AlertSettings:
          description: The settings for trigger alerts
          enum:
          - None
          - SendWhenEntering
          - SendWhenExiting
          - SendWhenEnteringOrExiting
          type: string
        StartTimeHour:
          description: The hour start time. E.g. 13 would be 1pm.  Time is in 24hr
            format.
          format: int32
          type: integer
        StartTimeMinute:
          description: The minute start time.  E.g. 46 would be the 46th minute of
            the hour.
          format: int32
          type: integer
        EndTimeHour:
          description: The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.
          format: int32
          type: integer
        EndTimeMinute:
          description: The minute end time.  E.g. 13 would be the 13th minute of the
            hour.
          format: int32
          type: integer
      type: object
    ApiResponseForPaginated[List[ExtendedGeofence]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - EndTimeMinute: 7
          CreatedBy: CreatedBy
          GeoFencingId: 6
          TriggerTaskId: 7
          StartTimeMinute: 2
          Coordinates:
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          CreatedAt: 2000-01-23T04:56:07.000+00:00
          StartTimeHour: 3
          AlertToOrgGroupId: 9
          AlertOrganisation: AlertOrganisation
          LastUpdatedByUserId: 5
          UpdatedAt: 2000-01-23T04:56:07.000+00:00
          Name: Name
          LocationName: LocationName
          UpdatedBy: UpdatedBy
          OrgId: 1
          CreatedByUserId: 5
          TaskName: TaskName
          JobCode: JobCode
          TriggerSettings: None
          TriggerJobCodeId: 2
          AlertSettings: None
          EndTimeHour: 4
        - EndTimeMinute: 7
          CreatedBy: CreatedBy
          GeoFencingId: 6
          TriggerTaskId: 7
          StartTimeMinute: 2
          Coordinates:
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          CreatedAt: 2000-01-23T04:56:07.000+00:00
          StartTimeHour: 3
          AlertToOrgGroupId: 9
          AlertOrganisation: AlertOrganisation
          LastUpdatedByUserId: 5
          UpdatedAt: 2000-01-23T04:56:07.000+00:00
          Name: Name
          LocationName: LocationName
          UpdatedBy: UpdatedBy
          OrgId: 1
          CreatedByUserId: 5
          TaskName: TaskName
          JobCode: JobCode
          TriggerSettings: None
          TriggerJobCodeId: 2
          AlertSettings: None
          EndTimeHour: 4
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/ExtendedGeofence'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ExtendedGeofence:
      description: An extended geofence record
      example:
        EndTimeMinute: 7
        CreatedBy: CreatedBy
        GeoFencingId: 6
        TriggerTaskId: 7
        StartTimeMinute: 2
        Coordinates:
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        CreatedAt: 2000-01-23T04:56:07.000+00:00
        StartTimeHour: 3
        AlertToOrgGroupId: 9
        AlertOrganisation: AlertOrganisation
        LastUpdatedByUserId: 5
        UpdatedAt: 2000-01-23T04:56:07.000+00:00
        Name: Name
        LocationName: LocationName
        UpdatedBy: UpdatedBy
        OrgId: 1
        CreatedByUserId: 5
        TaskName: TaskName
        JobCode: JobCode
        TriggerSettings: None
        TriggerJobCodeId: 2
        AlertSettings: None
        EndTimeHour: 4
      properties:
        JobCode:
          description: The Job code used when the employee enters/exits the geofence
          type: string
        TaskName:
          description: The name of the task used when the employee enters/exits the
            geofence
          type: string
        CreatedBy:
          description: The name of the employee who created the geofence
          type: string
        UpdatedBy:
          description: The name of the employee who last updated the geofence
          type: string
        AlertOrganisation:
          description: The name of the organisation group who will be notified when
            the geofence is triggered
          type: string
        GeoFencingId:
          description: The ID of the geofence
          format: int32
          type: integer
        OrgId:
          description: The ID of the organisation owning the geofence record
          format: int32
          type: integer
        CreatedByUserId:
          description: The ID of the user/employee who created the geofence
          format: int32
          type: integer
        LastUpdatedByUserId:
          description: The ID of the user/employee who last updated the geofence
          format: int32
          type: integer
        Name:
          description: A descriptive name of the geofence
          type: string
        LocationName:
          description: The name of the approx. location of the geofence
          type: string
        Coordinates:
          description: A list of co-ordinates specifying the geofence
          items:
            $ref: '#/components/schemas/BasicCoordinate'
          type: array
        CreatedAt:
          description: The date and time the geofence was created.  Time is in UTC.
          format: date-time
          type: string
        UpdatedAt:
          description: The date and time the geofence was updated last.  Time is in
            UTC.
          format: date-time
          type: string
        TriggerJobCodeId:
          description: The ID of the job code used when the employee enters/exits
            the geofence
          format: int32
          type: integer
        TriggerTaskId:
          description: The ID of the task used when the employee enters/exits the
            geofence
          format: int32
          type: integer
        TriggerSettings:
          description: The settings for triggering actions
          enum:
          - None
          - StartTimesheetWhenEntering
          - StopTimesheetWhenEntering
          - StartOnEnterStopOnLeave
          type: string
        AlertToOrgGroupId:
          description: The organisation group that will be notified when the geofence
            is triggered
          format: int32
          type: integer
        AlertSettings:
          description: The settings for trigger alerts
          enum:
          - None
          - SendWhenEntering
          - SendWhenExiting
          - SendWhenEnteringOrExiting
          type: string
        StartTimeHour:
          description: The hour start time. E.g. 13 would be 1pm.  Time is in 24hr
            format.
          format: int32
          type: integer
        StartTimeMinute:
          description: The minute start time.  E.g. 46 would be the 46th minute of
            the hour.
          format: int32
          type: integer
        EndTimeHour:
          description: The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.
          format: int32
          type: integer
        EndTimeMinute:
          description: The minute end time.  E.g. 13 would be the 13th minute of the
            hour.
          format: int32
          type: integer
      type: object
    ApiResponseForPaginated[List[BasicGeofence]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - GeoFencingId: 6
          Name: Name
        - GeoFencingId: 6
          Name: Name
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/BasicGeofence'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    BasicGeofence:
      description: A basic geofence
      example:
        GeoFencingId: 6
        Name: Name
      properties:
        GeoFencingId:
          description: The ID of the geofence
          format: int32
          type: integer
        Name:
          description: The descriptive name of the geofence
          type: string
      type: object
    ApiResponse[JobCode]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          Project: Project
          IsDeleted: true
          ProjectId: 1
          OrganisationId: 5
          ClientId: 6
          Id: 0
          Client: Client
          Code: Code
      properties:
        Data:
          $ref: '#/components/schemas/JobCode'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    JobCode:
      example:
        Project: Project
        IsDeleted: true
        ProjectId: 1
        OrganisationId: 5
        ClientId: 6
        Id: 0
        Client: Client
        Code: Code
      properties:
        Id:
          description: The ID of the job code (not the code itself)
          format: int32
          type: integer
        Code:
          description: The job code itself
          type: string
        Client:
          description: The name of the client
          type: string
        ClientId:
          description: The ID of the client
          format: int32
          type: integer
        Project:
          description: The name of the project
          type: string
        ProjectId:
          description: The ID of the project
          format: int32
          type: integer
        OrganisationId:
          description: Your organisation ID
          format: int32
          type: integer
        IsDeleted:
          description: A flag indicating whether or not the job code has been marked
            as deleted
          type: boolean
      type: object
    ApiResponse[List[JobCode]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - Project: Project
          IsDeleted: true
          ProjectId: 1
          OrganisationId: 5
          ClientId: 6
          Id: 0
          Client: Client
          Code: Code
        - Project: Project
          IsDeleted: true
          ProjectId: 1
          OrganisationId: 5
          ClientId: 6
          Id: 0
          Client: Client
          Code: Code
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/JobCode'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertJobCodeRequest:
      description: Fields for inserting a new Job Code
      example:
        ProjectId: 0
        ClientId: 6
        Code: Code
        LinkedTaskIds:
        - 1
        - 1
        LinkedOrgGroupIds:
        - 5
        - 5
      properties:
        Code:
          description: A short code for the Job.  This is referred to as a Job Code
          type: string
        ProjectId:
          description: The linked Project.  Time spent with this JobCode is on this
            Project
          format: int32
          type: integer
        ClientId:
          description: The linked Client.  Time spent with this JobCode is for this
            Client
          format: int32
          type: integer
        LinkedTaskIds:
          description: A list of Task Ids.  This are the Tasks that become available
            to the employee when they select this JobCode
          items:
            format: int32
            type: integer
          type: array
        LinkedOrgGroupIds:
          description: Optionally restrict access to the JobCode by specifying which
            Organisation Groups can use it
          items:
            format: int32
            type: integer
          type: array
      type: object
    UpdateJobCodeRequest:
      description: Fields used to update an existing JobCode
      example:
        IsDeleted: true
        ProjectId: 6
        ClientId: 1
        Id: 0
        Code: Code
        LinkedTaskIds:
        - 5
        - 5
        LinkedOrgGroupIds:
        - 5
        - 5
      properties:
        Id:
          description: The Id of the JobCode to be updated
          format: int32
          type: integer
        Code:
          description: The new JobCode to be set
          type: string
        ProjectId:
          description: The Id of the Project to be associated to
          format: int32
          type: integer
        ClientId:
          description: The Id of the Client to be associated to
          format: int32
          type: integer
        LinkedTaskIds:
          description: A collection of Task Ids to be available when choosing this
            JobCode
          items:
            format: int32
            type: integer
          type: array
        LinkedOrgGroupIds:
          description: Restrict the access to this JobCode by specifying which Organisation
            Groups can have access.  Only employees in these Organisation Groups will
            be able to access this JobCode
          items:
            format: int32
            type: integer
          type: array
        IsDeleted:
          description: Whether or not this JobCode is to be marked as deleted
          type: boolean
      type: object
    UpdateOrganisationRequest:
      description: Field for updating your Organisation
      example:
        OrgansationId: 0
        AddressLine02: AddressLine02
        OrganisationPostcode: OrganisationPostcode
        OrganisationEmailAddress: OrganisationEmailAddress
        OrganisationName: OrganisationName
        OrganisationSuburb: OrganisationSuburb
        AddressLine01: AddressLine01
        OrganisationCountry: OrganisationCountry
        OrganisationState: OrganisationState
        OrganisationPhone: OrganisationPhone
      properties:
        OrgansationId:
          description: The Id of your Organisation.  This is validated based on your
            current Auth Token
          format: int32
          type: integer
        OrganisationName:
          description: The updated organisation name
          type: string
        AddressLine01:
          description: The updated Address Line 1 value
          type: string
        AddressLine02:
          description: The updated Address Line 2 value
          type: string
        OrganisationSuburb:
          description: The updated address suburb
          type: string
        OrganisationState:
          description: The updated address state
          type: string
        OrganisationPostcode:
          description: The updated address postcode
          type: string
        OrganisationCountry:
          description: The updated address country
          type: string
        OrganisationPhone:
          description: The updated contact phone number
          type: string
        OrganisationEmailAddress:
          description: The update organisation email address
          type: string
      type: object
    ApiResponse[UpdateOrganisationResponse]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          ValidationErrors:
          - ValidationErrors
          - ValidationErrors
      properties:
        Data:
          $ref: '#/components/schemas/UpdateOrganisationResponse'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UpdateOrganisationResponse:
      example:
        ValidationErrors:
        - ValidationErrors
        - ValidationErrors
      properties:
        ValidationErrors:
          items:
            type: string
          type: array
      type: object
    ApiResponse[Organisation]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          Timezone: Timezone
          Suburb: Suburb
          SubscriptionSource: None
          IsActive: true
          SubscriptionCustomerId: SubscriptionCustomerId
          SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
          StripeCouponCode: StripeCouponCode
          Postcode: Postcode
          EmailAddress: EmailAddress
          Name: Name
          PricingPlans:
          - PlanId: PlanId
            Quantity: 6
          - PlanId: PlanId
            Quantity: 6
          MobileSignUpCode: MobileSignUpCode
          State: State
          Phone: Phone
          SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
          AddressLine02: AddressLine02
          Country: Country
          Id: 0
          AddressLine01: AddressLine01
          SignupToken: SignupToken
          SignUpSource: Desktop
      properties:
        Data:
          $ref: '#/components/schemas/Organisation'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    Organisation:
      description: An organisation in ChronoSheets
      example:
        Timezone: Timezone
        Suburb: Suburb
        SubscriptionSource: None
        IsActive: true
        SubscriptionCustomerId: SubscriptionCustomerId
        SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
        StripeCouponCode: StripeCouponCode
        Postcode: Postcode
        EmailAddress: EmailAddress
        Name: Name
        PricingPlans:
        - PlanId: PlanId
          Quantity: 6
        - PlanId: PlanId
          Quantity: 6
        MobileSignUpCode: MobileSignUpCode
        State: State
        Phone: Phone
        SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
        AddressLine02: AddressLine02
        Country: Country
        Id: 0
        AddressLine01: AddressLine01
        SignupToken: SignupToken
        SignUpSource: Desktop
      properties:
        Id:
          description: The ID of the organisation
          format: int32
          type: integer
        Name:
          description: The name of the organisation
          type: string
        AddressLine01:
          description: Address line 1 of the organisation
          type: string
        AddressLine02:
          description: Address line 2 of the organisation
          type: string
        Suburb:
          description: The suburb where the organisation is located
          type: string
        State:
          description: The state where the organisation is located
          type: string
        Postcode:
          description: The postcode of the organisation
          type: string
        Country:
          description: The country of the organisation
          type: string
        Phone:
          description: The primary phone contact number of the organisation
          type: string
        EmailAddress:
          description: The primary email address of the organisation
          type: string
        Timezone:
          description: The timezone of the organisation
          type: string
        SubscriptionCustomerId:
          description: The customer ID of the payments subscription
          type: string
        SignupToken:
          description: The sign up token
          type: string
        IsActive:
          description: Whether or not the organisation is active
          type: boolean
        StripeCouponCode:
          description: The payments coupon code
          type: string
        SubscriptionSource:
          description: The source of the subscription
          enum:
          - None
          - Stripe
          - AppleInApp
          - GoogleInApp
          type: string
        SignUpSource:
          description: The source where the organisation signed up
          enum:
          - Desktop
          - MobileiOS
          - MobileAndroid
          type: string
        MobileSignUpCode:
          description: A temporary mobile sign up code
          type: string
        SubscriptionCycleStart:
          description: The start date and time of the organisations subscription
          format: date-time
          type: string
        SubscriptionCycleEnd:
          description: The end date and time of the organisations subscription
          format: date-time
          type: string
        PricingPlans:
          description: The organisation's pricing plans
          items:
            $ref: '#/components/schemas/OrganisationPricingPlan'
          type: array
      type: object
    OrganisationPricingPlan:
      example:
        PlanId: PlanId
        Quantity: 6
      properties:
        PlanId:
          type: string
        Quantity:
          format: int32
          type: integer
      type: object
    ApiResponse[List[OrganisationGroup]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - IsDeleted: true
          OrganisationGroupName: OrganisationGroupName
          OrganisationId: 6
          Id: 0
        - IsDeleted: true
          OrganisationGroupName: OrganisationGroupName
          OrganisationId: 6
          Id: 0
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/OrganisationGroup'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    OrganisationGroup:
      description: An organisation group.  Organisation groups are used throughout
        ChronoSheets to assign many groups to one alert, action or restriction.  E.g.
        you can assign an organisation group to receive geofence alerts, or you could
        restrict access to vehicles to users within an organisation group.
      example:
        IsDeleted: true
        OrganisationGroupName: OrganisationGroupName
        OrganisationId: 6
        Id: 0
      properties:
        Id:
          description: The ID of the organisation group
          format: int32
          type: integer
        OrganisationId:
          description: The ID of the organisation
          format: int32
          type: integer
        OrganisationGroupName:
          description: The descriptive name of the organisation group
          type: string
        IsDeleted:
          description: Whether or not the organisation group is deleted
          type: boolean
      type: object
    ApiResponse[OrganisationGroup]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          IsDeleted: true
          OrganisationGroupName: OrganisationGroupName
          OrganisationId: 6
          Id: 0
      properties:
        Data:
          $ref: '#/components/schemas/OrganisationGroup'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertOrganisationGroupRequest:
      description: Fields for inserting a new Organisation Group
      example:
        OrganisationGroupName: OrganisationGroupName
        OrganisationGroupUserIds:
        - 0
        - 0
      properties:
        OrganisationGroupName:
          description: The name of the new Organisation Group.  This is used when
            you're looking up Organisation Groups elsewhere through ChronoSheets
          type: string
        OrganisationGroupUserIds:
          description: The Ids of the Users that are going to be in this Organisation
            Group
          items:
            format: int32
            type: integer
          type: array
      type: object
    SaveOrganisationGroupRequest:
      description: Fields used to save an OrganisationGroup
      example:
        IsDeleted: true
        OrganisationGroupName: OrganisationGroupName
        Id: 0
      properties:
        Id:
          description: The Id of the Organisation Group you want to update/save
          format: int32
          type: integer
        OrganisationGroupName:
          description: The updated name of the Organisation Group
          type: string
        IsDeleted:
          description: Whether or not the Organisation Group is to be marked as deleted
          type: boolean
      type: object
    ApiResponse[List[UserForManagement]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - IsPrimaryAccount: true
          UserName: UserName
          Organisation:
            Timezone: Timezone
            Suburb: Suburb
            SubscriptionSource: None
            IsActive: true
            SubscriptionCustomerId: SubscriptionCustomerId
            SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
            StripeCouponCode: StripeCouponCode
            Postcode: Postcode
            EmailAddress: EmailAddress
            Name: Name
            PricingPlans:
            - PlanId: PlanId
              Quantity: 6
            - PlanId: PlanId
              Quantity: 6
            MobileSignUpCode: MobileSignUpCode
            State: State
            Phone: Phone
            SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
            AddressLine02: AddressLine02
            Country: Country
            Id: 0
            AddressLine01: AddressLine01
            SignupToken: SignupToken
            SignUpSource: Desktop
          FirstName: FirstName
          OrganisationId: 6
          Roles: 1
          IsAccountActive: true
          EmailAddress: EmailAddress
          SetupWizardRequired: true
          IsSubscribedToNewsletter: true
          Id: 0
          LastName: LastName
          AlertSettings: 5
        - IsPrimaryAccount: true
          UserName: UserName
          Organisation:
            Timezone: Timezone
            Suburb: Suburb
            SubscriptionSource: None
            IsActive: true
            SubscriptionCustomerId: SubscriptionCustomerId
            SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
            StripeCouponCode: StripeCouponCode
            Postcode: Postcode
            EmailAddress: EmailAddress
            Name: Name
            PricingPlans:
            - PlanId: PlanId
              Quantity: 6
            - PlanId: PlanId
              Quantity: 6
            MobileSignUpCode: MobileSignUpCode
            State: State
            Phone: Phone
            SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
            AddressLine02: AddressLine02
            Country: Country
            Id: 0
            AddressLine01: AddressLine01
            SignupToken: SignupToken
            SignUpSource: Desktop
          FirstName: FirstName
          OrganisationId: 6
          Roles: 1
          IsAccountActive: true
          EmailAddress: EmailAddress
          SetupWizardRequired: true
          IsSubscribedToNewsletter: true
          Id: 0
          LastName: LastName
          AlertSettings: 5
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/UserForManagement'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UserForManagement:
      example:
        IsPrimaryAccount: true
        UserName: UserName
        Organisation:
          Timezone: Timezone
          Suburb: Suburb
          SubscriptionSource: None
          IsActive: true
          SubscriptionCustomerId: SubscriptionCustomerId
          SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
          StripeCouponCode: StripeCouponCode
          Postcode: Postcode
          EmailAddress: EmailAddress
          Name: Name
          PricingPlans:
          - PlanId: PlanId
            Quantity: 6
          - PlanId: PlanId
            Quantity: 6
          MobileSignUpCode: MobileSignUpCode
          State: State
          Phone: Phone
          SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
          AddressLine02: AddressLine02
          Country: Country
          Id: 0
          AddressLine01: AddressLine01
          SignupToken: SignupToken
          SignUpSource: Desktop
        FirstName: FirstName
        OrganisationId: 6
        Roles: 1
        IsAccountActive: true
        EmailAddress: EmailAddress
        SetupWizardRequired: true
        IsSubscribedToNewsletter: true
        Id: 0
        LastName: LastName
        AlertSettings: 5
      properties:
        IsAccountActive:
          type: boolean
        Id:
          description: The ID of the user
          format: int32
          type: integer
        OrganisationId:
          description: The ID of the organisation
          format: int32
          type: integer
        UserName:
          description: The username of the user
          type: string
        FirstName:
          description: The first name of the user
          type: string
        LastName:
          description: The last name of the user
          type: string
        EmailAddress:
          description: The email address of the user
          type: string
        Roles:
          description: A BIT field designating which Roles/Permissions the employee
            will have when they sign in.  See the {timesheets.types.Enums.UserRoles}
            Enum for more details
          format: int64
          type: integer
        AlertSettings:
          description: A BIT field designating which Alerts the employee will receive.  See
            the {timesheets.types.Enums.AlertSettings} Enum for more details
          format: int64
          type: integer
        SetupWizardRequired:
          description: Whether or not the setup wizard is required
          type: boolean
        IsSubscribedToNewsletter:
          description: Whether or not the user is subscribed to the user
          type: boolean
        Organisation:
          $ref: '#/components/schemas/Organisation'
        IsPrimaryAccount:
          description: Whether or not this account is the organisation's primary account.
          type: boolean
      type: object
    SetOrganisationGroupUsersRequest:
      example:
        CsvUserIds: CsvUserIds
        OrganisationGroupId: 0
      properties:
        OrganisationGroupId:
          format: int32
          type: integer
        CsvUserIds:
          type: string
      type: object
    ApiResponse[List[Project]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          OrganisationId: 1
          CostActual: 5.637376656633329
          ClientId: 6
          Id: 0
          EndDate: 2000-01-23T04:56:07.000+00:00
          CostEstimation: 5.962133916683182
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          OrganisationId: 1
          CostActual: 5.637376656633329
          ClientId: 6
          Id: 0
          EndDate: 2000-01-23T04:56:07.000+00:00
          CostEstimation: 5.962133916683182
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/Project'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    Project:
      description: A project in ChronoSheets
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ProjectName: ProjectName
        OrganisationId: 1
        CostActual: 5.637376656633329
        ClientId: 6
        Id: 0
        EndDate: 2000-01-23T04:56:07.000+00:00
        CostEstimation: 5.962133916683182
      properties:
        Id:
          description: The ID of the project
          format: int32
          type: integer
        ClientId:
          description: The ID of the client for which the project is being undertaken
            for
          format: int32
          type: integer
        OrganisationId:
          description: The ID of the organisation that is completing the project
          format: int32
          type: integer
        ProjectName:
          description: A descriptive name of the project
          type: string
        CostEstimation:
          description: The project's estimated cost
          format: double
          type: number
        CostActual:
          description: The project's actual cost
          format: double
          type: number
        StartDate:
          description: The start date and time of the project
          format: date-time
          type: string
        EndDate:
          description: The end date and time of the project
          format: date-time
          type: string
      type: object
    ApiResponse[Project]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          OrganisationId: 1
          CostActual: 5.637376656633329
          ClientId: 6
          Id: 0
          EndDate: 2000-01-23T04:56:07.000+00:00
          CostEstimation: 5.962133916683182
      properties:
        Data:
          $ref: '#/components/schemas/Project'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertProjectRequest:
      description: Fields for inserting a new Project
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ProjectName: ProjectName
        ClientId: 0
        EndDate: 2000-01-23T04:56:07.000+00:00
        CostEstimation: 6.027456183070403
      properties:
        ClientId:
          description: The Id of the Client that is associated with the new project
          format: int32
          type: integer
        ProjectName:
          description: The name of the new Project
          type: string
        CostEstimation:
          description: The estimated cost of work to complete the project.  This value
            is used in the Organisation Reports view 'Project Costs'
          format: double
          type: number
        StartDate:
          description: The start date of the project.  When the project is due to
            start
          format: date-time
          type: string
        EndDate:
          description: The end date of the project.  When the project is due to end
          format: date-time
          type: string
      type: object
    UpdateProjectRequest:
      description: Fields for updating a project
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ProjectName: ProjectName
        ProjectId: 0
        EndDate: 2000-01-23T04:56:07.000+00:00
        CostEstimation: 6.027456183070403
      properties:
        ProjectId:
          description: The Id of the Project that is to be updated
          format: int32
          type: integer
        ProjectName:
          description: The new name of the Project
          type: string
        CostEstimation:
          description: The updated estimated cost of the Project
          format: double
          type: number
        StartDate:
          description: The updated project start date
          format: date-time
          type: string
        EndDate:
          description: The update project end date
          format: date-time
          type: string
      type: object
    ApiResponse[List[JobSeriesReportItem]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          ProjectName: ProjectName
          JobCode: JobCode
          ProjectId: 1
          ClientId: 6
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
          JobId: 0
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          ProjectName: ProjectName
          JobCode: JobCode
          ProjectId: 1
          ClientId: 6
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
          JobId: 0
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/JobSeriesReportItem'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    JobSeriesReportItem:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ClientName: ClientName
        ProjectName: ProjectName
        JobCode: JobCode
        ProjectId: 1
        ClientId: 6
        SpanSeconds: 5
        EndDate: 2000-01-23T04:56:07.000+00:00
        JobId: 0
      properties:
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        JobId:
          format: int32
          type: integer
        ClientId:
          format: int32
          type: integer
        ClientName:
          type: string
        ProjectId:
          format: int32
          type: integer
        ProjectName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
        JobCode:
          type: string
      type: object
    ApiResponse[CombinedReportsData]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          TotalsProjects:
          - ProjectName: ProjectName
            UserId: 9
            OrganisationId: 5
            ProjectId: 9
            SpanSeconds: 6
          - ProjectName: ProjectName
            UserId: 9
            OrganisationId: 5
            ProjectId: 9
            SpanSeconds: 6
          SeriesClients:
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ClientName: ClientName
            ClientId: 1
            SpanSeconds: 5
            EndDate: 2000-01-23T04:56:07.000+00:00
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ClientName: ClientName
            ClientId: 1
            SpanSeconds: 5
            EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesTasks:
          - StartDate: 2000-01-23T04:56:07.000+00:00
            TaskId: 0
            TaskName: TaskName
            SpanSeconds: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
          - StartDate: 2000-01-23T04:56:07.000+00:00
            TaskId: 0
            TaskName: TaskName
            SpanSeconds: 6
            EndDate: 2000-01-23T04:56:07.000+00:00
          SeriesJobCodes:
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ClientName: ClientName
            ProjectName: ProjectName
            JobCode: JobCode
            ProjectId: 1
            ClientId: 6
            SpanSeconds: 5
            EndDate: 2000-01-23T04:56:07.000+00:00
            JobId: 0
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ClientName: ClientName
            ProjectName: ProjectName
            JobCode: JobCode
            ProjectId: 1
            ClientId: 6
            SpanSeconds: 5
            EndDate: 2000-01-23T04:56:07.000+00:00
            JobId: 0
          TotalsJobCodes:
          - ClientName: ClientName
            ProjectName: ProjectName
            JobCode: JobCode
            OrganisationId: 7
            ProjectId: 2
            ClientId: 3
            SpanSeconds: 4
            JobId: 9
          - ClientName: ClientName
            ProjectName: ProjectName
            JobCode: JobCode
            OrganisationId: 7
            ProjectId: 2
            ClientId: 3
            SpanSeconds: 4
            JobId: 9
          TotalsClients:
          - ClientName: ClientName
            UserId: 7
            OrganisationId: 6
            ClientId: 1
            SpanSeconds: 4
          - ClientName: ClientName
            UserId: 7
            OrganisationId: 6
            ClientId: 1
            SpanSeconds: 4
          SeriesProjects:
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ProjectName: ProjectName
            ProjectId: 5
            SpanSeconds: 2
            EndDate: 2000-01-23T04:56:07.000+00:00
          - StartDate: 2000-01-23T04:56:07.000+00:00
            ProjectName: ProjectName
            ProjectId: 5
            SpanSeconds: 2
            EndDate: 2000-01-23T04:56:07.000+00:00
          TotalsTasks:
          - TaskId: 1
            TaskName: TaskName
            UserId: 1
            OrganisationId: 7
            SpanSeconds: 1
          - TaskId: 1
            TaskName: TaskName
            UserId: 1
            OrganisationId: 7
            SpanSeconds: 1
      properties:
        Data:
          $ref: '#/components/schemas/CombinedReportsData'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    CombinedReportsData:
      example:
        TotalsProjects:
        - ProjectName: ProjectName
          UserId: 9
          OrganisationId: 5
          ProjectId: 9
          SpanSeconds: 6
        - ProjectName: ProjectName
          UserId: 9
          OrganisationId: 5
          ProjectId: 9
          SpanSeconds: 6
        SeriesClients:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          ClientId: 1
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          ClientId: 1
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
        SeriesTasks:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          TaskId: 0
          TaskName: TaskName
          SpanSeconds: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
        - StartDate: 2000-01-23T04:56:07.000+00:00
          TaskId: 0
          TaskName: TaskName
          SpanSeconds: 6
          EndDate: 2000-01-23T04:56:07.000+00:00
        SeriesJobCodes:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          ProjectName: ProjectName
          JobCode: JobCode
          ProjectId: 1
          ClientId: 6
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
          JobId: 0
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          ProjectName: ProjectName
          JobCode: JobCode
          ProjectId: 1
          ClientId: 6
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
          JobId: 0
        TotalsJobCodes:
        - ClientName: ClientName
          ProjectName: ProjectName
          JobCode: JobCode
          OrganisationId: 7
          ProjectId: 2
          ClientId: 3
          SpanSeconds: 4
          JobId: 9
        - ClientName: ClientName
          ProjectName: ProjectName
          JobCode: JobCode
          OrganisationId: 7
          ProjectId: 2
          ClientId: 3
          SpanSeconds: 4
          JobId: 9
        TotalsClients:
        - ClientName: ClientName
          UserId: 7
          OrganisationId: 6
          ClientId: 1
          SpanSeconds: 4
        - ClientName: ClientName
          UserId: 7
          OrganisationId: 6
          ClientId: 1
          SpanSeconds: 4
        SeriesProjects:
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          ProjectId: 5
          SpanSeconds: 2
          EndDate: 2000-01-23T04:56:07.000+00:00
        - StartDate: 2000-01-23T04:56:07.000+00:00
          ProjectName: ProjectName
          ProjectId: 5
          SpanSeconds: 2
          EndDate: 2000-01-23T04:56:07.000+00:00
        TotalsTasks:
        - TaskId: 1
          TaskName: TaskName
          UserId: 1
          OrganisationId: 7
          SpanSeconds: 1
        - TaskId: 1
          TaskName: TaskName
          UserId: 1
          OrganisationId: 7
          SpanSeconds: 1
      properties:
        SeriesJobCodes:
          items:
            $ref: '#/components/schemas/JobSeriesReportItem'
          type: array
        SeriesTasks:
          items:
            $ref: '#/components/schemas/TaskSeriesReportItem'
          type: array
        SeriesClients:
          items:
            $ref: '#/components/schemas/ClientSeriesReportItem'
          type: array
        SeriesProjects:
          items:
            $ref: '#/components/schemas/ProjectSeriesReportItem'
          type: array
        TotalsJobCodes:
          items:
            $ref: '#/components/schemas/JobTotalsReportItem'
          type: array
        TotalsTasks:
          items:
            $ref: '#/components/schemas/TaskTotalsReportItem'
          type: array
        TotalsClients:
          items:
            $ref: '#/components/schemas/ClientTotalsReportItem'
          type: array
        TotalsProjects:
          items:
            $ref: '#/components/schemas/ProjectTotalsReportItem'
          type: array
      type: object
    TaskSeriesReportItem:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        TaskId: 0
        TaskName: TaskName
        SpanSeconds: 6
        EndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        TaskId:
          format: int32
          type: integer
        TaskName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    ClientSeriesReportItem:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ClientName: ClientName
        ClientId: 1
        SpanSeconds: 5
        EndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        ClientId:
          format: int32
          type: integer
        ClientName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    ProjectSeriesReportItem:
      example:
        StartDate: 2000-01-23T04:56:07.000+00:00
        ProjectName: ProjectName
        ProjectId: 5
        SpanSeconds: 2
        EndDate: 2000-01-23T04:56:07.000+00:00
      properties:
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        ProjectId:
          format: int32
          type: integer
        ProjectName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    JobTotalsReportItem:
      example:
        ClientName: ClientName
        ProjectName: ProjectName
        JobCode: JobCode
        OrganisationId: 7
        ProjectId: 2
        ClientId: 3
        SpanSeconds: 4
        JobId: 9
      properties:
        OrganisationId:
          format: int32
          type: integer
        JobId:
          format: int32
          type: integer
        JobCode:
          type: string
        ClientId:
          format: int32
          type: integer
        ClientName:
          type: string
        ProjectId:
          format: int32
          type: integer
        ProjectName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    TaskTotalsReportItem:
      example:
        TaskId: 1
        TaskName: TaskName
        UserId: 1
        OrganisationId: 7
        SpanSeconds: 1
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        TaskId:
          format: int32
          type: integer
        TaskName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    ClientTotalsReportItem:
      example:
        ClientName: ClientName
        UserId: 7
        OrganisationId: 6
        ClientId: 1
        SpanSeconds: 4
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        ClientId:
          format: int32
          type: integer
        ClientName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    ProjectTotalsReportItem:
      example:
        ProjectName: ProjectName
        UserId: 9
        OrganisationId: 5
        ProjectId: 9
        SpanSeconds: 6
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        ProjectId:
          format: int32
          type: integer
        ProjectName:
          type: string
        SpanSeconds:
          format: int32
          type: integer
      type: object
    ApiResponseForPaginated[List[RawReportItem]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - PayOvertimeAmount: 2.3021358869347655
          SpanSecondsOvertime: 2
          Description: Description
          ProjectName: ProjectName
          PayAmount: 5.637376656633329
          SpanSecondsNormalTime: 3
          OrganisationId: 6
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
          EmailAddress: EmailAddress
          StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          TripCost: 7.061401241503109
          Username: Username
          TaskName: TaskName
          UserId: 1
          JobCode: JobCode
          TripDistanceMeters: 9.301444243932576
        - PayOvertimeAmount: 2.3021358869347655
          SpanSecondsOvertime: 2
          Description: Description
          ProjectName: ProjectName
          PayAmount: 5.637376656633329
          SpanSecondsNormalTime: 3
          OrganisationId: 6
          SpanSeconds: 5
          EndDate: 2000-01-23T04:56:07.000+00:00
          EmailAddress: EmailAddress
          StartDate: 2000-01-23T04:56:07.000+00:00
          ClientName: ClientName
          TripCost: 7.061401241503109
          Username: Username
          TaskName: TaskName
          UserId: 1
          JobCode: JobCode
          TripDistanceMeters: 9.301444243932576
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/RawReportItem'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    RawReportItem:
      example:
        PayOvertimeAmount: 2.3021358869347655
        SpanSecondsOvertime: 2
        Description: Description
        ProjectName: ProjectName
        PayAmount: 5.637376656633329
        SpanSecondsNormalTime: 3
        OrganisationId: 6
        SpanSeconds: 5
        EndDate: 2000-01-23T04:56:07.000+00:00
        EmailAddress: EmailAddress
        StartDate: 2000-01-23T04:56:07.000+00:00
        ClientName: ClientName
        TripCost: 7.061401241503109
        Username: Username
        TaskName: TaskName
        UserId: 1
        JobCode: JobCode
        TripDistanceMeters: 9.301444243932576
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        Username:
          type: string
        EmailAddress:
          type: string
        JobCode:
          type: string
        TaskName:
          type: string
        ClientName:
          type: string
        ProjectName:
          type: string
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        SpanSeconds:
          format: int32
          type: integer
        Description:
          type: string
        PayAmount:
          format: double
          type: number
        PayOvertimeAmount:
          format: double
          type: number
        TripCost:
          format: double
          type: number
        TripDistanceMeters:
          format: double
          type: number
        SpanSecondsNormalTime:
          format: int32
          type: integer
        SpanSecondsOvertime:
          format: int32
          type: integer
      type: object
    ApiResponse[List[ProjectCostingReportItem]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - ClientName: ClientName
          ActualCostFiltered: 5.637376656633329
          ProjectName: ProjectName
          ProjectId: 0
          OrganisationId: 1
          EstimatedCost: 5.962133916683182
          ClientId: 6
          ActualCost: 2.3021358869347655
        - ClientName: ClientName
          ActualCostFiltered: 5.637376656633329
          ProjectName: ProjectName
          ProjectId: 0
          OrganisationId: 1
          EstimatedCost: 5.962133916683182
          ClientId: 6
          ActualCost: 2.3021358869347655
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/ProjectCostingReportItem'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ProjectCostingReportItem:
      example:
        ClientName: ClientName
        ActualCostFiltered: 5.637376656633329
        ProjectName: ProjectName
        ProjectId: 0
        OrganisationId: 1
        EstimatedCost: 5.962133916683182
        ClientId: 6
        ActualCost: 2.3021358869347655
      properties:
        ProjectId:
          format: int32
          type: integer
        ProjectName:
          type: string
        ClientId:
          format: int32
          type: integer
        OrganisationId:
          format: int32
          type: integer
        ClientName:
          type: string
        EstimatedCost:
          format: double
          type: number
        ActualCostFiltered:
          format: double
          type: number
        ActualCost:
          format: double
          type: number
      type: object
    ApiResponseForPaginated[List[OrgReportTrip]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - EndAddress: EndAddress
          VehicleMake: VehicleMake
          FirstName: FirstName
          TripTotalCost: 9.301444243932576
          VehicleId: 5
          VehicleName: VehicleName
          CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
          TimesheetId: 1
          VehicleYear: VehicleYear
          EndDate: 2000-01-23T04:56:07.000+00:00
          StartAddress: StartAddress
          EmailAddress: EmailAddress
          TripId: 6
          StartDate: 2000-01-23T04:56:07.000+00:00
          OrgId: 2
          MobilePlatform: Unknown
          VehicleModel: VehicleModel
          Username: Username
          UserId: 5
          TotalTripDistanceMeters: 3.616076749251911
          PathCoordinates:
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          LastName: LastName
          CostPerKilometer: 7.061401241503109
        - EndAddress: EndAddress
          VehicleMake: VehicleMake
          FirstName: FirstName
          TripTotalCost: 9.301444243932576
          VehicleId: 5
          VehicleName: VehicleName
          CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
          TimesheetId: 1
          VehicleYear: VehicleYear
          EndDate: 2000-01-23T04:56:07.000+00:00
          StartAddress: StartAddress
          EmailAddress: EmailAddress
          TripId: 6
          StartDate: 2000-01-23T04:56:07.000+00:00
          OrgId: 2
          MobilePlatform: Unknown
          VehicleModel: VehicleModel
          Username: Username
          UserId: 5
          TotalTripDistanceMeters: 3.616076749251911
          PathCoordinates:
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          LastName: LastName
          CostPerKilometer: 7.061401241503109
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/OrgReportTrip'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    OrgReportTrip:
      example:
        EndAddress: EndAddress
        VehicleMake: VehicleMake
        FirstName: FirstName
        TripTotalCost: 9.301444243932576
        VehicleId: 5
        VehicleName: VehicleName
        CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
        TimesheetId: 1
        VehicleYear: VehicleYear
        EndDate: 2000-01-23T04:56:07.000+00:00
        StartAddress: StartAddress
        EmailAddress: EmailAddress
        TripId: 6
        StartDate: 2000-01-23T04:56:07.000+00:00
        OrgId: 2
        MobilePlatform: Unknown
        VehicleModel: VehicleModel
        Username: Username
        UserId: 5
        TotalTripDistanceMeters: 3.616076749251911
        PathCoordinates:
        - Latitude: 2.027123023002322
          Longitude: 4.145608029883936
        - Latitude: 2.027123023002322
          Longitude: 4.145608029883936
        LastName: LastName
        CostPerKilometer: 7.061401241503109
      properties:
        Username:
          type: string
        EmailAddress:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        TripId:
          format: int32
          type: integer
        TimesheetId:
          format: int32
          type: integer
        VehicleId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        OrgId:
          format: int32
          type: integer
        MobilePlatform:
          enum:
          - Unknown
          - iOS
          - Android
          type: string
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        VehicleName:
          type: string
        VehicleMake:
          type: string
        VehicleModel:
          type: string
        VehicleYear:
          type: string
        CostPerKilometer:
          format: double
          type: number
        TripTotalCost:
          format: double
          type: number
        TotalTripDistanceMeters:
          format: double
          type: number
        StartAddress:
          type: string
        EndAddress:
          type: string
        PathCoordinates:
          items:
            $ref: '#/components/schemas/TripCoordinate'
          type: array
        CacheExpiryDate:
          format: date-time
          type: string
      type: object
    TripCoordinate:
      example:
        Latitude: 2.027123023002322
        Longitude: 4.145608029883936
      properties:
        Latitude:
          format: double
          type: number
        Longitude:
          format: double
          type: number
      type: object
    ApiResponseForPaginated[List[OrgReportTimesheetFileAttachment]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          DocumentS3SignedUrl: DocumentS3SignedUrl
          TimesheetId: 6
          Latitude: 2.3021358869347655
          AudioDurationSeconds: 3
          NonImageFilePath: NonImageFilePath
          Notes: Notes
          TimesheetStart: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          FirstName: FirstName
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 9
          Longitude: 7.061401241503109
          EmailAddress: EmailAddress
          FileAttachmentId: 1
          ImageMediumFilePath: ImageMediumFilePath
          OrgId: 5
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          Username: Username
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          LastName: LastName
          DateUploaded: 2000-01-23T04:56:07.000+00:00
        - TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          DocumentS3SignedUrl: DocumentS3SignedUrl
          TimesheetId: 6
          Latitude: 2.3021358869347655
          AudioDurationSeconds: 3
          NonImageFilePath: NonImageFilePath
          Notes: Notes
          TimesheetStart: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          FirstName: FirstName
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 9
          Longitude: 7.061401241503109
          EmailAddress: EmailAddress
          FileAttachmentId: 1
          ImageMediumFilePath: ImageMediumFilePath
          OrgId: 5
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          Username: Username
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          LastName: LastName
          DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/OrgReportTimesheetFileAttachment'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    OrgReportTimesheetFileAttachment:
      example:
        TimesheetEnd: 2000-01-23T04:56:07.000+00:00
        DateImageCaptured: 2000-01-23T04:56:07.000+00:00
        OriginalFileName: OriginalFileName
        DocumentS3SignedUrl: DocumentS3SignedUrl
        TimesheetId: 6
        Latitude: 2.3021358869347655
        AudioDurationSeconds: 3
        NonImageFilePath: NonImageFilePath
        Notes: Notes
        TimesheetStart: 2000-01-23T04:56:07.000+00:00
        AttachmentType: Image
        ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
        FirstName: FirstName
        ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
        ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
        StorageAllocationBytes: 9
        Longitude: 7.061401241503109
        EmailAddress: EmailAddress
        FileAttachmentId: 1
        ImageMediumFilePath: ImageMediumFilePath
        OrgId: 5
        ImageSmallFilePath: ImageSmallFilePath
        MobilePlatform: Unknown
        Username: Username
        ImageLargeFilePath: ImageLargeFilePath
        UserId: 5
        LastName: LastName
        DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        Username:
          type: string
        EmailAddress:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        TimesheetId:
          description: The ID of the timesheet this attachment is attached to.
          format: int32
          type: integer
        DocumentS3SignedUrl:
          description: The limited use signed URL for the document (if it's not an
            image).  This URL is unique and will eventually expire.  If the attachment
            is an image, then this won't be set.
          type: string
        ImageLargeS3SignedUrl:
          description: The limited use signed URL for the large version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        ImageMediumS3SignedUrl:
          description: The limited use signed URL for the medium version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        ImageSmallS3SignedUrl:
          description: The limited use signed URL for the small version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        TimesheetStart:
          description: The start date and time of the timesheet that this attachment
            is attached to
          format: date-time
          type: string
        TimesheetEnd:
          description: The end date and time of the timesheet that this attachment
            is attached to
          format: date-time
          type: string
        FileAttachmentId:
          description: The ID of the file attachment
          format: int32
          type: integer
        UserId:
          description: The ID of the user who attached the file
          format: int32
          type: integer
        OrgId:
          description: The ID of the organisation that owns the file and employs the
            employee
          format: int32
          type: integer
        MobilePlatform:
          description: The mobile platform that was used to attach the file
          enum:
          - Unknown
          - iOS
          - Android
          type: string
        AttachmentType:
          description: The type of file attachment
          enum:
          - Image
          - WordDoc
          - Pdf
          - MSSpreadSheet
          - MSPowerPoint
          - RichTextFormat
          - ZipFile
          - Other
          - Audio
          type: string
        Notes:
          description: Any notes regarding the file attachment
          type: string
        NonImageFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            if it's not an image.  If the attachment is an image then this won't be
            set.
          type: string
        ImageLargeFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the large version of the
            image.
          type: string
        ImageMediumFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the medium version of the
            image.
          type: string
        ImageSmallFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the small version of the
            image.
          type: string
        OriginalFileName:
          description: The original file name of the attachment
          type: string
        Latitude:
          description: Meta-data indicating the latitude of the file attachment.  If
            the attachment is an image, this data originates from the meta data inside
            the image file.
          format: double
          type: number
        Longitude:
          description: Meta-data indicating the longitude of the file attachment.  If
            the attachment is an image, this data originates from the meta data inside
            the image file.
          format: double
          type: number
        DateUploaded:
          description: The date and time the attachment was uploaded.  Time is in
            UTC.
          format: date-time
          type: string
        DateImageCaptured:
          description: The original date and time the image was captured, if it was
            an image.  This data originates from the meta data inside the image file.
          format: date-time
          type: string
        StorageAllocationBytes:
          description: The number of bytes allocated for storing the file attachment.
          format: int64
          type: integer
        AudioDurationSeconds:
          description: If the attachment was an audio file, this field indicates the
            duration of the audio file in seconds.  This data originates from the
            meta data inside the audio file.
          format: int32
          type: integer
      type: object
    ApiResponseForPaginated[List[OrgReportTranscript]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          FinishedJob: true
          DocumentS3SignedUrl: DocumentS3SignedUrl
          JobName: JobName
          TimesheetId: 1
          Latitude: 7.061401241503109
          AudioDurationSeconds: 2
          CompletedProcessing: 2000-01-23T04:56:07.000+00:00
          StartedProcessing: 2000-01-23T04:56:07.000+00:00
          Created: 2000-01-23T04:56:07.000+00:00
          MediaType: Other
          NonImageFilePath: NonImageFilePath
          TranscriptionStatus: Saved
          Notes: Notes
          TimesheetStart: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          FirstName: FirstName
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 3
          Longitude: 9.301444243932576
          EmailAddress: EmailAddress
          FileAttachmentId: 5
          ImageMediumFilePath: ImageMediumFilePath
          TranscriptionId: 6
          OrgId: 2
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          Contents: Contents
          Username: Username
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          LastName: LastName
          DateUploaded: 2000-01-23T04:56:07.000+00:00
        - TimesheetEnd: 2000-01-23T04:56:07.000+00:00
          DateImageCaptured: 2000-01-23T04:56:07.000+00:00
          OriginalFileName: OriginalFileName
          FinishedJob: true
          DocumentS3SignedUrl: DocumentS3SignedUrl
          JobName: JobName
          TimesheetId: 1
          Latitude: 7.061401241503109
          AudioDurationSeconds: 2
          CompletedProcessing: 2000-01-23T04:56:07.000+00:00
          StartedProcessing: 2000-01-23T04:56:07.000+00:00
          Created: 2000-01-23T04:56:07.000+00:00
          MediaType: Other
          NonImageFilePath: NonImageFilePath
          TranscriptionStatus: Saved
          Notes: Notes
          TimesheetStart: 2000-01-23T04:56:07.000+00:00
          AttachmentType: Image
          ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
          FirstName: FirstName
          ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
          ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
          StorageAllocationBytes: 3
          Longitude: 9.301444243932576
          EmailAddress: EmailAddress
          FileAttachmentId: 5
          ImageMediumFilePath: ImageMediumFilePath
          TranscriptionId: 6
          OrgId: 2
          ImageSmallFilePath: ImageSmallFilePath
          MobilePlatform: Unknown
          Contents: Contents
          Username: Username
          ImageLargeFilePath: ImageLargeFilePath
          UserId: 5
          LastName: LastName
          DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/OrgReportTranscript'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    OrgReportTranscript:
      example:
        TimesheetEnd: 2000-01-23T04:56:07.000+00:00
        DateImageCaptured: 2000-01-23T04:56:07.000+00:00
        OriginalFileName: OriginalFileName
        FinishedJob: true
        DocumentS3SignedUrl: DocumentS3SignedUrl
        JobName: JobName
        TimesheetId: 1
        Latitude: 7.061401241503109
        AudioDurationSeconds: 2
        CompletedProcessing: 2000-01-23T04:56:07.000+00:00
        StartedProcessing: 2000-01-23T04:56:07.000+00:00
        Created: 2000-01-23T04:56:07.000+00:00
        MediaType: Other
        NonImageFilePath: NonImageFilePath
        TranscriptionStatus: Saved
        Notes: Notes
        TimesheetStart: 2000-01-23T04:56:07.000+00:00
        AttachmentType: Image
        ImageLargeS3SignedUrl: ImageLargeS3SignedUrl
        FirstName: FirstName
        ImageSmallS3SignedUrl: ImageSmallS3SignedUrl
        ImageMediumS3SignedUrl: ImageMediumS3SignedUrl
        StorageAllocationBytes: 3
        Longitude: 9.301444243932576
        EmailAddress: EmailAddress
        FileAttachmentId: 5
        ImageMediumFilePath: ImageMediumFilePath
        TranscriptionId: 6
        OrgId: 2
        ImageSmallFilePath: ImageSmallFilePath
        MobilePlatform: Unknown
        Contents: Contents
        Username: Username
        ImageLargeFilePath: ImageLargeFilePath
        UserId: 5
        LastName: LastName
        DateUploaded: 2000-01-23T04:56:07.000+00:00
      properties:
        FinishedJob:
          type: boolean
        CompletedProcessing:
          format: date-time
          type: string
        Created:
          format: date-time
          type: string
        StartedProcessing:
          format: date-time
          type: string
        TranscriptionId:
          format: int32
          type: integer
        JobName:
          type: string
        Contents:
          type: string
        MediaType:
          enum:
          - Other
          - Mp3
          - Mp4
          - Wav
          - Flac
          type: string
        TranscriptionStatus:
          enum:
          - Saved
          - Processing
          - Completed
          - FailedWithError
          type: string
        Username:
          type: string
        EmailAddress:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        TimesheetId:
          description: The ID of the timesheet this attachment is attached to.
          format: int32
          type: integer
        DocumentS3SignedUrl:
          description: The limited use signed URL for the document (if it's not an
            image).  This URL is unique and will eventually expire.  If the attachment
            is an image, then this won't be set.
          type: string
        ImageLargeS3SignedUrl:
          description: The limited use signed URL for the large version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        ImageMediumS3SignedUrl:
          description: The limited use signed URL for the medium version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        ImageSmallS3SignedUrl:
          description: The limited use signed URL for the small version of the image.  This
            URL is unique and will eventually expire.  Only set when the attachment
            is actually an image.
          type: string
        TimesheetStart:
          description: The start date and time of the timesheet that this attachment
            is attached to
          format: date-time
          type: string
        TimesheetEnd:
          description: The end date and time of the timesheet that this attachment
            is attached to
          format: date-time
          type: string
        FileAttachmentId:
          description: The ID of the file attachment
          format: int32
          type: integer
        UserId:
          description: The ID of the user who attached the file
          format: int32
          type: integer
        OrgId:
          description: The ID of the organisation that owns the file and employs the
            employee
          format: int32
          type: integer
        MobilePlatform:
          description: The mobile platform that was used to attach the file
          enum:
          - Unknown
          - iOS
          - Android
          type: string
        AttachmentType:
          description: The type of file attachment
          enum:
          - Image
          - WordDoc
          - Pdf
          - MSSpreadSheet
          - MSPowerPoint
          - RichTextFormat
          - ZipFile
          - Other
          - Audio
          type: string
        Notes:
          description: Any notes regarding the file attachment
          type: string
        NonImageFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            if it's not an image.  If the attachment is an image then this won't be
            set.
          type: string
        ImageLargeFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the large version of the
            image.
          type: string
        ImageMediumFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the medium version of the
            image.
          type: string
        ImageSmallFilePath:
          description: The path to the file attachment as hosted by ChronoSheets storage,
            only set if it's an image.  This is regarding the small version of the
            image.
          type: string
        OriginalFileName:
          description: The original file name of the attachment
          type: string
        Latitude:
          description: Meta-data indicating the latitude of the file attachment.  If
            the attachment is an image, this data originates from the meta data inside
            the image file.
          format: double
          type: number
        Longitude:
          description: Meta-data indicating the longitude of the file attachment.  If
            the attachment is an image, this data originates from the meta data inside
            the image file.
          format: double
          type: number
        DateUploaded:
          description: The date and time the attachment was uploaded.  Time is in
            UTC.
          format: date-time
          type: string
        DateImageCaptured:
          description: The original date and time the image was captured, if it was
            an image.  This data originates from the meta data inside the image file.
          format: date-time
          type: string
        StorageAllocationBytes:
          description: The number of bytes allocated for storing the file attachment.
          format: int64
          type: integer
        AudioDurationSeconds:
          description: If the attachment was an audio file, this field indicates the
            duration of the audio file in seconds.  This data originates from the
            meta data inside the audio file.
          format: int32
          type: integer
      type: object
    ApiResponse[Trip]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          EndAddress: EndAddress
          VehicleMake: VehicleMake
          TripTotalCost: 7.061401241503109
          VehicleId: 1
          VehicleName: VehicleName
          CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
          TimesheetId: 6
          VehicleYear: VehicleYear
          EndDate: 2000-01-23T04:56:07.000+00:00
          StartAddress: StartAddress
          TripId: 0
          StartDate: 2000-01-23T04:56:07.000+00:00
          OrgId: 5
          MobilePlatform: Unknown
          VehicleModel: VehicleModel
          UserId: 5
          TotalTripDistanceMeters: 9.301444243932576
          PathCoordinates:
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          CostPerKilometer: 2.3021358869347655
      properties:
        Data:
          $ref: '#/components/schemas/Trip'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    Trip:
      example:
        EndAddress: EndAddress
        VehicleMake: VehicleMake
        TripTotalCost: 7.061401241503109
        VehicleId: 1
        VehicleName: VehicleName
        CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
        TimesheetId: 6
        VehicleYear: VehicleYear
        EndDate: 2000-01-23T04:56:07.000+00:00
        StartAddress: StartAddress
        TripId: 0
        StartDate: 2000-01-23T04:56:07.000+00:00
        OrgId: 5
        MobilePlatform: Unknown
        VehicleModel: VehicleModel
        UserId: 5
        TotalTripDistanceMeters: 9.301444243932576
        PathCoordinates:
        - Latitude: 2.027123023002322
          Longitude: 4.145608029883936
        - Latitude: 2.027123023002322
          Longitude: 4.145608029883936
        CostPerKilometer: 2.3021358869347655
      properties:
        TripId:
          format: int32
          type: integer
        TimesheetId:
          format: int32
          type: integer
        VehicleId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        OrgId:
          format: int32
          type: integer
        MobilePlatform:
          enum:
          - Unknown
          - iOS
          - Android
          type: string
        StartDate:
          format: date-time
          type: string
        EndDate:
          format: date-time
          type: string
        VehicleName:
          type: string
        VehicleMake:
          type: string
        VehicleModel:
          type: string
        VehicleYear:
          type: string
        CostPerKilometer:
          format: double
          type: number
        TripTotalCost:
          format: double
          type: number
        TotalTripDistanceMeters:
          format: double
          type: number
        StartAddress:
          type: string
        EndAddress:
          type: string
        PathCoordinates:
          items:
            $ref: '#/components/schemas/TripCoordinate'
          type: array
        CacheExpiryDate:
          format: date-time
          type: string
      type: object
    ApiResponse[List[FleetSummaryReportItem]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - IsDeleted: true
          PermittedEmployees:
          - 9
          - 9
          OrganisationId: 2
          Make: Make
          TotalRunningCostDollars: 5.962133916683182
          TotalDistanceMetersFiltered: 0.8008281904610115
          LicencePlateNumber: LicencePlateNumber
          Name: Name
          Year: Year
          Model: Model
          Id: 5
          CostPerKilometer: 7.061401241503109
          TotalDistanceMeters: 6.027456183070403
          TotalRunningCostDollarsFiltered: 1.4658129805029452
        - IsDeleted: true
          PermittedEmployees:
          - 9
          - 9
          OrganisationId: 2
          Make: Make
          TotalRunningCostDollars: 5.962133916683182
          TotalDistanceMetersFiltered: 0.8008281904610115
          LicencePlateNumber: LicencePlateNumber
          Name: Name
          Year: Year
          Model: Model
          Id: 5
          CostPerKilometer: 7.061401241503109
          TotalDistanceMeters: 6.027456183070403
          TotalRunningCostDollarsFiltered: 1.4658129805029452
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/FleetSummaryReportItem'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    FleetSummaryReportItem:
      example:
        IsDeleted: true
        PermittedEmployees:
        - 9
        - 9
        OrganisationId: 2
        Make: Make
        TotalRunningCostDollars: 5.962133916683182
        TotalDistanceMetersFiltered: 0.8008281904610115
        LicencePlateNumber: LicencePlateNumber
        Name: Name
        Year: Year
        Model: Model
        Id: 5
        CostPerKilometer: 7.061401241503109
        TotalDistanceMeters: 6.027456183070403
        TotalRunningCostDollarsFiltered: 1.4658129805029452
      properties:
        TotalDistanceMetersFiltered:
          format: double
          type: number
        TotalDistanceMeters:
          format: double
          type: number
        TotalRunningCostDollarsFiltered:
          format: double
          type: number
        TotalRunningCostDollars:
          format: double
          type: number
        Id:
          description: The ID of the vehicle
          format: int32
          type: integer
        OrganisationId:
          description: The ID of the organisation managing the vehicle
          format: int32
          type: integer
        Name:
          description: A name given to the vehicle
          type: string
        CostPerKilometer:
          description: The cost, in dollars, of running the vehicle over one kilometer
          format: double
          type: number
        Make:
          description: The make of the vehicle
          type: string
        Model:
          description: The model of the vehicle
          type: string
        Year:
          description: The year the vehicle was manufactured
          type: string
        LicencePlateNumber:
          description: The licence plate number of the vehicle
          type: string
        IsDeleted:
          description: Whether or not the vehicle is deleted
          type: boolean
        PermittedEmployees:
          description: An array of employee IDs that are permitted to use the vehicle
          items:
            format: int32
            type: integer
          type: array
      type: object
    ApiResponse[List[TimesheetTask]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - TripEnabled: true
          IsDeleted: true
          TaskName: TaskName
          OrganisationId: 6
          Id: 0
        - TripEnabled: true
          IsDeleted: true
          TaskName: TaskName
          OrganisationId: 6
          Id: 0
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/TimesheetTask'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    TimesheetTask:
      example:
        TripEnabled: true
        IsDeleted: true
        TaskName: TaskName
        OrganisationId: 6
        Id: 0
      properties:
        Id:
          format: int32
          type: integer
        TaskName:
          type: string
        OrganisationId:
          format: int32
          type: integer
        IsDeleted:
          type: boolean
        TripEnabled:
          type: boolean
      type: object
    ApiResponse[TimesheetTask]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          TripEnabled: true
          IsDeleted: true
          TaskName: TaskName
          OrganisationId: 6
          Id: 0
      properties:
        Data:
          $ref: '#/components/schemas/TimesheetTask'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertTaskRequest:
      description: Fields for inserting a new Task
      example:
        TripEnabled: true
        TaskName: TaskName
      properties:
        TaskName:
          description: The name of the Task.  Used to identify the Task when the user
            is selecting from a list of available Tasks
          type: string
        TripEnabled:
          description: Whether or not GPS Trip Tracking is enabled on this Task.  GPS
            Trip tracking is available on the iOS and Android apps.  If it's enabled
            an additional dialog is shown to the user after Task selection that allows
            the User to choose if they want to record the GPS data
          type: boolean
      type: object
    UpdateTaskRequest:
      description: Fields used to update a Task
      example:
        TripEnabled: true
        IsDeleted: true
        TaskName: TaskName
        Id: 0
      properties:
        Id:
          description: The Id of the Task that is to be updated
          format: int32
          type: integer
        TaskName:
          description: The updated Task Name
          type: string
        IsDeleted:
          description: Whether or not this Task should be marked as deleted
          type: boolean
        TripEnabled:
          description: Whether or not this Task should have GPS Trip Recording enabled
          type: boolean
      type: object
    CreateAutomationStepRequest:
      example:
        GeofencingId: 0
        AutomationActionType: EnterGeofence
        Latitude: 1.4658129805029452
        NfcId: 6
        Longitude: 5.962133916683182
        ClientTime: 2000-01-23T04:56:07.000+00:00
      properties:
        GeofencingId:
          format: int32
          type: integer
        NfcId:
          format: int32
          type: integer
        AutomationActionType:
          enum:
          - EnterGeofence
          - ExitGeofence
          - TapOnNfc
          type: string
        Latitude:
          format: double
          type: number
        Longitude:
          format: double
          type: number
        ClientTime:
          format: date-time
          type: string
      type: object
    ApiResponseForPaginated[List[TimesheetAutomationWithOrgAndGeofence]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - IsProcessed: true
          UserName: UserName
          FirstName: FirstName
          Coordinates:
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          GeofenceName: GeofenceName
          Latitude: 5.637376656633329
          AutomationId: 5
          Longitude: 2.3021358869347655
          Created: 2000-01-23T04:56:07.000+00:00
          OrgId: 6
          AutomationActionType: EnterGeofence
          UserId: 1
          ClientDateTime: 2000-01-23T04:56:07.000+00:00
          LastName: LastName
          Expires: 2000-01-23T04:56:07.000+00:00
        - IsProcessed: true
          UserName: UserName
          FirstName: FirstName
          Coordinates:
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          - Latitude: 0.8008281904610115
            Longitude: 6.027456183070403
          GeofenceName: GeofenceName
          Latitude: 5.637376656633329
          AutomationId: 5
          Longitude: 2.3021358869347655
          Created: 2000-01-23T04:56:07.000+00:00
          OrgId: 6
          AutomationActionType: EnterGeofence
          UserId: 1
          ClientDateTime: 2000-01-23T04:56:07.000+00:00
          LastName: LastName
          Expires: 2000-01-23T04:56:07.000+00:00
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/TimesheetAutomationWithOrgAndGeofence'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    TimesheetAutomationWithOrgAndGeofence:
      example:
        IsProcessed: true
        UserName: UserName
        FirstName: FirstName
        Coordinates:
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        - Latitude: 0.8008281904610115
          Longitude: 6.027456183070403
        GeofenceName: GeofenceName
        Latitude: 5.637376656633329
        AutomationId: 5
        Longitude: 2.3021358869347655
        Created: 2000-01-23T04:56:07.000+00:00
        OrgId: 6
        AutomationActionType: EnterGeofence
        UserId: 1
        ClientDateTime: 2000-01-23T04:56:07.000+00:00
        LastName: LastName
        Expires: 2000-01-23T04:56:07.000+00:00
      properties:
        OrgId:
          format: int32
          type: integer
        GeofenceName:
          type: string
        Coordinates:
          items:
            $ref: '#/components/schemas/BasicCoordinate'
          type: array
        UserId:
          format: int32
          type: integer
        UserName:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        AutomationId:
          format: int32
          type: integer
        AutomationActionType:
          enum:
          - EnterGeofence
          - ExitGeofence
          - TapOnNfc
          type: string
        Created:
          format: date-time
          type: string
        Latitude:
          format: double
          type: number
        Longitude:
          format: double
          type: number
        IsProcessed:
          type: boolean
        Expires:
          format: date-time
          type: string
        ClientDateTime:
          format: date-time
          type: string
      type: object
    Timesheet:
      example:
        TaskId: 5
        StartDateTime: 2000-01-23T04:56:07.000+00:00
        Description: Description
        EndDateTime: 2000-01-23T04:56:07.000+00:00
        PayAmount: 7.061401241503109
        UserId: 6
        IncludesOvertime: true
        OvertimePayAmount: 9.301444243932576
        TimesheetId: 0
        FileAttachmentCount: 2
        JobId: 1
        TripId: 5
      properties:
        TimesheetId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        JobId:
          format: int32
          type: integer
        TaskId:
          format: int32
          type: integer
        StartDateTime:
          format: date-time
          type: string
        EndDateTime:
          format: date-time
          type: string
        Description:
          type: string
        TripId:
          format: int32
          type: integer
        FileAttachmentCount:
          format: int32
          type: integer
        PayAmount:
          format: double
          type: number
        OvertimePayAmount:
          format: double
          type: number
        IncludesOvertime:
          type: boolean
      type: object
    BatchUpdateTimesheetRequest:
      description: Contains a collection of Timesheet objects that are to be either
        created or updated.  If the ID of the timesheet is specified in the Timesheet
        object, then that Timesheet will be updated otherwise it will be created
      example:
        Timesheets:
        - TaskId: 5
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          Description: Description
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          PayAmount: 7.061401241503109
          UserId: 6
          IncludesOvertime: true
          OvertimePayAmount: 9.301444243932576
          TimesheetId: 0
          FileAttachmentCount: 2
          JobId: 1
          TripId: 5
        - TaskId: 5
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          Description: Description
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          PayAmount: 7.061401241503109
          UserId: 6
          IncludesOvertime: true
          OvertimePayAmount: 9.301444243932576
          TimesheetId: 0
          FileAttachmentCount: 2
          JobId: 1
          TripId: 5
      properties:
        Timesheets:
          description: A collection of Timesheet objects to be either created or updated
          items:
            $ref: '#/components/schemas/Timesheet'
          type: array
      type: object
    ApiResponse[List[Int32]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - 0
        - 0
      properties:
        Data:
          description: The main Data of the response
          items:
            format: int32
            type: integer
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ApiResponse[List[Timesheet]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - TaskId: 5
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          Description: Description
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          PayAmount: 7.061401241503109
          UserId: 6
          IncludesOvertime: true
          OvertimePayAmount: 9.301444243932576
          TimesheetId: 0
          FileAttachmentCount: 2
          JobId: 1
          TripId: 5
        - TaskId: 5
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          Description: Description
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          PayAmount: 7.061401241503109
          UserId: 6
          IncludesOvertime: true
          OvertimePayAmount: 9.301444243932576
          TimesheetId: 0
          FileAttachmentCount: 2
          JobId: 1
          TripId: 5
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/Timesheet'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ApiResponse[Transcription]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          Status: Saved
          OrgId: 6
          Contents: Contents
          MediaType: Other
          Id: 0
          FileAttachmentId: 1
          Created: 2000-01-23T04:56:07.000+00:00
      properties:
        Data:
          $ref: '#/components/schemas/Transcription'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    Transcription:
      example:
        Status: Saved
        OrgId: 6
        Contents: Contents
        MediaType: Other
        Id: 0
        FileAttachmentId: 1
        Created: 2000-01-23T04:56:07.000+00:00
      properties:
        Id:
          format: int32
          type: integer
        OrgId:
          format: int32
          type: integer
        FileAttachmentId:
          format: int32
          type: integer
        Created:
          format: date-time
          type: string
        Status:
          enum:
          - Saved
          - Processing
          - Completed
          - FailedWithError
          type: string
        MediaType:
          enum:
          - Other
          - Mp3
          - Mp4
          - Wav
          - Flac
          type: string
        Contents:
          type: string
      type: object
    CreateTripRequest:
      description: Contains fields for creating a Trip
      example:
        MobilePlatform: Unknown
        VehicleId: 6
        TimesheetId: 0
        DistanceMeters: 1.4658129805029452
        PathCoordsStringCsv: PathCoordsStringCsv
      properties:
        TimesheetId:
          description: The associated Timesheet record Id.  The Trip will be linked
            to the Timesheet with this TimesheetId
          format: int32
          type: integer
        VehicleId:
          description: The associated Vehicle Id.  The Trip will show that this Vehicle
            was used
          format: int32
          type: integer
        PathCoordsStringCsv:
          description: 'A CSV of GPS path co-ordinates.  Format example: -37.8433562,144.7226188;[Lat1],[Long1];........[LatN],[LongN]'
          type: string
        DistanceMeters:
          description: The total distance of the Trip
          format: double
          type: number
        MobilePlatform:
          description: The Mobile platform that the Trip was recorded on
          enum:
          - Unknown
          - iOS
          - Android
          type: string
      type: object
    ApiResponseForPaginated[List[Trip]]:
      description: A paginated API repsonse
      example:
        Status: Succeeded
        TotalSetCount: 0
        Message: Message
        Data:
        - EndAddress: EndAddress
          VehicleMake: VehicleMake
          TripTotalCost: 7.061401241503109
          VehicleId: 1
          VehicleName: VehicleName
          CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
          TimesheetId: 6
          VehicleYear: VehicleYear
          EndDate: 2000-01-23T04:56:07.000+00:00
          StartAddress: StartAddress
          TripId: 0
          StartDate: 2000-01-23T04:56:07.000+00:00
          OrgId: 5
          MobilePlatform: Unknown
          VehicleModel: VehicleModel
          UserId: 5
          TotalTripDistanceMeters: 9.301444243932576
          PathCoordinates:
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          CostPerKilometer: 2.3021358869347655
        - EndAddress: EndAddress
          VehicleMake: VehicleMake
          TripTotalCost: 7.061401241503109
          VehicleId: 1
          VehicleName: VehicleName
          CacheExpiryDate: 2000-01-23T04:56:07.000+00:00
          TimesheetId: 6
          VehicleYear: VehicleYear
          EndDate: 2000-01-23T04:56:07.000+00:00
          StartAddress: StartAddress
          TripId: 0
          StartDate: 2000-01-23T04:56:07.000+00:00
          OrgId: 5
          MobilePlatform: Unknown
          VehicleModel: VehicleModel
          UserId: 5
          TotalTripDistanceMeters: 9.301444243932576
          PathCoordinates:
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          - Latitude: 2.027123023002322
            Longitude: 4.145608029883936
          CostPerKilometer: 2.3021358869347655
      properties:
        TotalSetCount:
          description: The count of total records that are being paginated
          format: int32
          type: integer
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/Trip'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertUserJobFavouriteRequest:
      description: Used to mark a JobCode as a Favourite.  Favourites can be used
        in the Mobile app and on the ChronoSheets website
      example:
        JobId: 0
      properties:
        JobId:
          description: The Id of the JobCode that is being marked as a favourite
          format: int32
          type: integer
      type: object
    ApiResponse[List[UserJobFavourite]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - Id: 0
          JobId: 6
        - Id: 0
          JobId: 6
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/UserJobFavourite'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UserJobFavourite:
      example:
        Id: 0
        JobId: 6
      properties:
        Id:
          format: int32
          type: integer
        JobId:
          format: int32
          type: integer
      type: object
    ApiResponse[List[UserHourlyRate]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - IsCurrent: true
          RateId: 0
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          UserId: 6
          OrganisationId: 1
          HourlyOvertimeRate: 5.637376656633329
          HourlyRate: 5.962133916683182
        - IsCurrent: true
          RateId: 0
          StartDateTime: 2000-01-23T04:56:07.000+00:00
          EndDateTime: 2000-01-23T04:56:07.000+00:00
          UserId: 6
          OrganisationId: 1
          HourlyOvertimeRate: 5.637376656633329
          HourlyRate: 5.962133916683182
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/UserHourlyRate'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UserHourlyRate:
      example:
        IsCurrent: true
        RateId: 0
        StartDateTime: 2000-01-23T04:56:07.000+00:00
        EndDateTime: 2000-01-23T04:56:07.000+00:00
        UserId: 6
        OrganisationId: 1
        HourlyOvertimeRate: 5.637376656633329
        HourlyRate: 5.962133916683182
      properties:
        RateId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        OrganisationId:
          format: int32
          type: integer
        IsCurrent:
          type: boolean
        HourlyRate:
          format: double
          type: number
        HourlyOvertimeRate:
          format: double
          type: number
        StartDateTime:
          format: date-time
          type: string
        EndDateTime:
          format: date-time
          type: string
      type: object
    InsertUserHourlyRateRequest:
      description: Fields for inserting a new set of Pay Rates for a user.  Archiving
        of the previous Pay Rate is done for you automatically
      example:
        UserId: 0
        HourlyOvertimeRate: 1.4658129805029452
        HourlyRate: 6.027456183070403
        CurrentDate: 2000-01-23T04:56:07.000+00:00
      properties:
        UserId:
          description: The Id of the User that is getting the new set of Pay Rates
          format: int32
          type: integer
        HourlyRate:
          description: The Hourly Rate the employee should receive during their usual
            rostered hours
          format: double
          type: number
        HourlyOvertimeRate:
          description: The Hourly Rate the employee should receive during outside
            of their usual rostered hours
          format: double
          type: number
        CurrentDate:
          description: The current date time
          format: date-time
          type: string
      type: object
    DoLoginRequest:
      description: An API Request object for logging into ChronoSheets
      example:
        RememberMe: true
        UsernameOrEmail: UsernameOrEmail
        Password: Password
      properties:
        UsernameOrEmail:
          description: Your ChronoSheets username or registered email address
          type: string
        Password:
          description: Your ChronoSheets password
          type: string
        RememberMe:
          description: Increase session expiry beyond default of 1 hour
          type: boolean
      type: object
    ApiResponse[DoLoginResponse]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          CSAuthToken: CSAuthToken
          LoggedInUser:
            IsPrimaryAccount: true
            SetupWizardRequired: true
            IsSubscribedToNewsletter: true
            UserName: UserName
            Organisation:
              Timezone: Timezone
              Suburb: Suburb
              SubscriptionSource: None
              IsActive: true
              SubscriptionCustomerId: SubscriptionCustomerId
              SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
              StripeCouponCode: StripeCouponCode
              Postcode: Postcode
              EmailAddress: EmailAddress
              Name: Name
              PricingPlans:
              - PlanId: PlanId
                Quantity: 6
              - PlanId: PlanId
                Quantity: 6
              MobileSignUpCode: MobileSignUpCode
              State: State
              Phone: Phone
              SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
              AddressLine02: AddressLine02
              Country: Country
              Id: 0
              AddressLine01: AddressLine01
              SignupToken: SignupToken
              SignUpSource: Desktop
            FirstName: FirstName
            OrganisationId: 6
            Roles: 1
            Id: 0
            LastName: LastName
            AlertSettings: 5
            EmailAddress: EmailAddress
      properties:
        Data:
          $ref: '#/components/schemas/DoLoginResponse'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    DoLoginResponse:
      description: A Response object containing important information that can be
        used after the user has logged in
      example:
        CSAuthToken: CSAuthToken
        LoggedInUser:
          IsPrimaryAccount: true
          SetupWizardRequired: true
          IsSubscribedToNewsletter: true
          UserName: UserName
          Organisation:
            Timezone: Timezone
            Suburb: Suburb
            SubscriptionSource: None
            IsActive: true
            SubscriptionCustomerId: SubscriptionCustomerId
            SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
            StripeCouponCode: StripeCouponCode
            Postcode: Postcode
            EmailAddress: EmailAddress
            Name: Name
            PricingPlans:
            - PlanId: PlanId
              Quantity: 6
            - PlanId: PlanId
              Quantity: 6
            MobileSignUpCode: MobileSignUpCode
            State: State
            Phone: Phone
            SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
            AddressLine02: AddressLine02
            Country: Country
            Id: 0
            AddressLine01: AddressLine01
            SignupToken: SignupToken
            SignUpSource: Desktop
          FirstName: FirstName
          OrganisationId: 6
          Roles: 1
          Id: 0
          LastName: LastName
          AlertSettings: 5
          EmailAddress: EmailAddress
      properties:
        CSAuthToken:
          description: 'The ChronoSheets Auth Token.  Use this token for all subsequent
            requests to the API.  The Auth Token does these things: holds your session
            and gives you appropraite authorisation to access API endpoints based
            on your UserRoles'
          type: string
        LoggedInUser:
          $ref: '#/components/schemas/ClientSideUser'
      type: object
    ClientSideUser:
      description: A user within ChronoSheets
      example:
        IsPrimaryAccount: true
        SetupWizardRequired: true
        IsSubscribedToNewsletter: true
        UserName: UserName
        Organisation:
          Timezone: Timezone
          Suburb: Suburb
          SubscriptionSource: None
          IsActive: true
          SubscriptionCustomerId: SubscriptionCustomerId
          SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
          StripeCouponCode: StripeCouponCode
          Postcode: Postcode
          EmailAddress: EmailAddress
          Name: Name
          PricingPlans:
          - PlanId: PlanId
            Quantity: 6
          - PlanId: PlanId
            Quantity: 6
          MobileSignUpCode: MobileSignUpCode
          State: State
          Phone: Phone
          SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
          AddressLine02: AddressLine02
          Country: Country
          Id: 0
          AddressLine01: AddressLine01
          SignupToken: SignupToken
          SignUpSource: Desktop
        FirstName: FirstName
        OrganisationId: 6
        Roles: 1
        Id: 0
        LastName: LastName
        AlertSettings: 5
        EmailAddress: EmailAddress
      properties:
        Id:
          description: The ID of the user
          format: int32
          type: integer
        OrganisationId:
          description: The ID of the organisation
          format: int32
          type: integer
        UserName:
          description: The username of the user
          type: string
        FirstName:
          description: The first name of the user
          type: string
        LastName:
          description: The last name of the user
          type: string
        EmailAddress:
          description: The email address of the user
          type: string
        Roles:
          description: A BIT field designating which Roles/Permissions the employee
            will have when they sign in.  See the {timesheets.types.Enums.UserRoles}
            Enum for more details
          format: int64
          type: integer
        AlertSettings:
          description: A BIT field designating which Alerts the employee will receive.  See
            the {timesheets.types.Enums.AlertSettings} Enum for more details
          format: int64
          type: integer
        SetupWizardRequired:
          description: Whether or not the setup wizard is required
          type: boolean
        IsSubscribedToNewsletter:
          description: Whether or not the user is subscribed to the user
          type: boolean
        Organisation:
          $ref: '#/components/schemas/Organisation'
        IsPrimaryAccount:
          description: Whether or not this account is the organisation's primary account.
          type: boolean
      type: object
    ApiResponse[UserProfile]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          IsSubscribedToNewsletter: true
          UserName: UserName
          FirstName: FirstName
          OrganisationId: 6
          OrganisationName: OrganisationName
          OrganisationSuburb: OrganisationSuburb
          Roles: 1
          Id: 0
          LastName: LastName
          AlertSettings: 5
          OrganisationCountry: OrganisationCountry
          EmailAddress: EmailAddress
      properties:
        Data:
          $ref: '#/components/schemas/UserProfile'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UserProfile:
      example:
        IsSubscribedToNewsletter: true
        UserName: UserName
        FirstName: FirstName
        OrganisationId: 6
        OrganisationName: OrganisationName
        OrganisationSuburb: OrganisationSuburb
        Roles: 1
        Id: 0
        LastName: LastName
        AlertSettings: 5
        OrganisationCountry: OrganisationCountry
        EmailAddress: EmailAddress
      properties:
        Id:
          format: int32
          type: integer
        OrganisationId:
          format: int32
          type: integer
        UserName:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        EmailAddress:
          type: string
        IsSubscribedToNewsletter:
          type: boolean
        Roles:
          format: int64
          type: integer
        AlertSettings:
          format: int64
          type: integer
        OrganisationName:
          type: string
        OrganisationSuburb:
          type: string
        OrganisationCountry:
          type: string
      type: object
    UpdateMyProfileRequest:
      example:
        NewPassword: NewPassword
        IsSubscribedToNewsletter: true
        WantsToChangePassword: true
        ConfirmNewPassword: ConfirmNewPassword
        FirstName: FirstName
        LastName: LastName
        OldPassword: OldPassword
        EmailAddress: EmailAddress
      properties:
        EmailAddress:
          type: string
        FirstName:
          type: string
        LastName:
          type: string
        OldPassword:
          type: string
        NewPassword:
          type: string
        ConfirmNewPassword:
          type: string
        IsSubscribedToNewsletter:
          type: boolean
        WantsToChangePassword:
          type: boolean
      type: object
    ApiResponse[UpdateProfileResponse]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          ValidationErrors:
          - ValidationErrors
          - ValidationErrors
          UserId: 6
          OrganisationId: 0
      properties:
        Data:
          $ref: '#/components/schemas/UpdateProfileResponse'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UpdateProfileResponse:
      example:
        ValidationErrors:
        - ValidationErrors
        - ValidationErrors
        UserId: 6
        OrganisationId: 0
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        ValidationErrors:
          items:
            type: string
          type: array
      type: object
    InsertUserRequest:
      description: Fields for Inserting a new User account (employee) under your Organisation
        in ChronoSheets
      example:
        IsSubscribedToNewsletter: true
        UserName: UserName
        HourlyOvertimePayRate: 5.962133916683182
        FirstName: FirstName
        HourlyPayRate: 1.4658129805029452
        Roles: 0
        LastName: LastName
        AlertSettings: 6
        EmailAddress: EmailAddress
        CurrentDate: 2000-01-23T04:56:07.000+00:00
      properties:
        EmailAddress:
          description: The Email Address of the employee
          type: string
        FirstName:
          description: The First Name of the employee
          type: string
        LastName:
          description: The Last Name of the employee
          type: string
        IsSubscribedToNewsletter:
          description: Whether or not the employee is subscribed to ChronoSheets newsletters
          type: boolean
        Roles:
          description: A BIT field designating which Roles/Permissions the employee
            will have when they sign in.  See the {timesheets.types.Enums.UserRoles}
            Enum for more details
          format: int64
          type: integer
        AlertSettings:
          description: A BIT field designating which Alerts the employee will receive.  See
            the {timesheets.types.Enums.AlertSettings} Enum for more details
          format: int64
          type: integer
        UserName:
          description: The UserName of the employee.  This can be used when logging
            into ChronoSheets
          type: string
        HourlyPayRate:
          description: Set the starting usual Hourly Pay Rate with this value.  This
            is the Pay Rate the employee receives for working during Rostered Hours
          format: double
          type: number
        HourlyOvertimePayRate:
          description: Set the starting usual Overtime Hourly Pay Rate with this value.  This
            is the Pay Rate the employee receives for working outside of Rostered
            Hours
          format: double
          type: number
        CurrentDate:
          description: The Current date time
          format: date-time
          type: string
      type: object
    ApiResponse[InsertUserResponse]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          ValidationErrors:
          - ValidationErrors
          - ValidationErrors
          UserId: 6
          OrganisationId: 0
      properties:
        Data:
          $ref: '#/components/schemas/InsertUserResponse'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    InsertUserResponse:
      example:
        ValidationErrors:
        - ValidationErrors
        - ValidationErrors
        UserId: 6
        OrganisationId: 0
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        ValidationErrors:
          items:
            type: string
          type: array
      type: object
    UpdateUserRequest:
      description: Fields for updating an employee User Account
      example:
        IsSubscribedToNewsletter: true
        UserId: 0
        FirstName: FirstName
        Roles: 6
        LastName: LastName
        IsAccountActive: true
        AlertSettings: 1
        EmailAddress: EmailAddress
      properties:
        UserId:
          description: The Id of the User that is to be updated
          format: int32
          type: integer
        EmailAddress:
          description: The Email Address of the employee
          type: string
        FirstName:
          description: The First Name of the employee
          type: string
        LastName:
          description: The Last Name of the employee
          type: string
        IsSubscribedToNewsletter:
          description: Whether or not the employee is subscribed to ChronoSheets newsletters
          type: boolean
        IsAccountActive:
          description: Whether or not the employee account is active
          type: boolean
        Roles:
          description: A BIT field designating which Roles/Permissions the employee
            will have when they sign in.  See the {timesheets.types.Enums.UserRoles}
            Enum for more details
          format: int64
          type: integer
        AlertSettings:
          description: A BIT field designating which Alerts the employee will receive.  See
            the {timesheets.types.Enums.AlertSettings} Enum for more details
          format: int64
          type: integer
      type: object
    ApiResponse[UpdateUserResponse]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          ValidationErrors:
          - ValidationErrors
          - ValidationErrors
          UserId: 6
          OrganisationId: 0
      properties:
        Data:
          $ref: '#/components/schemas/UpdateUserResponse'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UpdateUserResponse:
      example:
        ValidationErrors:
        - ValidationErrors
        - ValidationErrors
        UserId: 6
        OrganisationId: 0
      properties:
        OrganisationId:
          format: int32
          type: integer
        UserId:
          format: int32
          type: integer
        ValidationErrors:
          items:
            type: string
          type: array
      type: object
    ApiResponse[UserForManagement]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
          IsPrimaryAccount: true
          UserName: UserName
          Organisation:
            Timezone: Timezone
            Suburb: Suburb
            SubscriptionSource: None
            IsActive: true
            SubscriptionCustomerId: SubscriptionCustomerId
            SubscriptionCycleStart: 2000-01-23T04:56:07.000+00:00
            StripeCouponCode: StripeCouponCode
            Postcode: Postcode
            EmailAddress: EmailAddress
            Name: Name
            PricingPlans:
            - PlanId: PlanId
              Quantity: 6
            - PlanId: PlanId
              Quantity: 6
            MobileSignUpCode: MobileSignUpCode
            State: State
            Phone: Phone
            SubscriptionCycleEnd: 2000-01-23T04:56:07.000+00:00
            AddressLine02: AddressLine02
            Country: Country
            Id: 0
            AddressLine01: AddressLine01
            SignupToken: SignupToken
            SignUpSource: Desktop
          FirstName: FirstName
          OrganisationId: 6
          Roles: 1
          IsAccountActive: true
          EmailAddress: EmailAddress
          SetupWizardRequired: true
          IsSubscribedToNewsletter: true
          Id: 0
          LastName: LastName
          AlertSettings: 5
      properties:
        Data:
          $ref: '#/components/schemas/UserForManagement'
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    ApiResponse[List[UsualHoursDay]]:
      description: A standard API response
      example:
        Status: Succeeded
        Message: Message
        Data:
        - DeleteUsualHours:
          - 2
          - 2
          DayType: Monday
          TimeSlots:
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
        - DeleteUsualHours:
          - 2
          - 2
          DayType: Monday
          TimeSlots:
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
      properties:
        Data:
          description: The main Data of the response
          items:
            $ref: '#/components/schemas/UsualHoursDay'
          type: array
        Status:
          description: The API response status. Indicates if the request was successful,
            failed or was unauthorised.
          enum:
          - Succeeded
          - FatalException
          - GeneralError
          - ValidationError
          - UnAuthorized
          - SessionExpired
          type: string
        Message:
          description: A message to accompany the response status.  If the Status
            is failed, this message will hint why it failed and what you need to do.
          type: string
      type: object
    UsualHoursDay:
      example:
        DeleteUsualHours:
        - 2
        - 2
        DayType: Monday
        TimeSlots:
        - StartMinute: 1
          StartHour: 6
          UsualHourId: 0
          DayType: Monday
          EndHour: 5
          EndMinute: 5
          IsValid: true
        - StartMinute: 1
          StartHour: 6
          UsualHourId: 0
          DayType: Monday
          EndHour: 5
          EndMinute: 5
          IsValid: true
      properties:
        DayType:
          description: Specify which day this collection of Roster timeslots is for
            (Monday-Sunday)
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
          type: string
        TimeSlots:
          description: A collection of TimeSlots within this day
          items:
            $ref: '#/components/schemas/TimeSlot'
          type: array
        DeleteUsualHours:
          description: Mark here which existing UsualHours are to be deleted
          items:
            format: int32
            type: integer
          type: array
      type: object
    TimeSlot:
      example:
        StartMinute: 1
        StartHour: 6
        UsualHourId: 0
        DayType: Monday
        EndHour: 5
        EndMinute: 5
        IsValid: true
      properties:
        DayType:
          enum:
          - Monday
          - Tuesday
          - Wednesday
          - Thursday
          - Friday
          - Saturday
          - Sunday
          type: string
        UsualHourId:
          format: int32
          type: integer
        StartHour:
          format: int32
          type: integer
        StartMinute:
          format: int32
          type: integer
        EndHour:
          format: int32
          type: integer
        EndMinute:
          format: int32
          type: integer
        IsValid:
          type: boolean
      type: object
    SetUsualHoursRequest:
      description: An object that can be used to set the Usual Hours (Rostered Hours)
        of an employee user account
      example:
        UserId: 0
        UsualHoursData:
        - DeleteUsualHours:
          - 2
          - 2
          DayType: Monday
          TimeSlots:
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
        - DeleteUsualHours:
          - 2
          - 2
          DayType: Monday
          TimeSlots:
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
          - StartMinute: 1
            StartHour: 6
            UsualHourId: 0
            DayType: Monday
            EndHour: 5
            EndMinute: 5
            IsValid: true
      properties:
        UsualHoursData:
          description: A Collection of days (Mon-Sun) with updated Roster timeslots
          items:
            $ref: '#/components/schemas/UsualHoursDay'
          type: array
        UserId:
          description: The Id of the User that these updated Rostered Hours will be
            applied to
          format: int32
          type: integer
      type: object
  securitySchemes:
    x-chronosheets-auth:
      description: ChronoSheets API Token
      in: header
      name: x-chronosheets-auth
      type: apiKey
x-original-swagger-version: "2.0"

