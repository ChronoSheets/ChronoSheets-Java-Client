/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibModel;

import java.util.Objects;
import java.util.Arrays;
import ChronoSheetsClientLibModel.BasicCoordinate;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * A geofence
 */
@ApiModel(description = "A geofence")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-25T22:43:31.260+11:00[Australia/Sydney]")
public class Geofence {
  public static final String SERIALIZED_NAME_GEO_FENCING_ID = "GeoFencingId";
  @SerializedName(SERIALIZED_NAME_GEO_FENCING_ID)
  private Integer geoFencingId;

  public static final String SERIALIZED_NAME_ORG_ID = "OrgId";
  @SerializedName(SERIALIZED_NAME_ORG_ID)
  private Integer orgId;

  public static final String SERIALIZED_NAME_CREATED_BY_USER_ID = "CreatedByUserId";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_USER_ID)
  private Integer createdByUserId;

  public static final String SERIALIZED_NAME_LAST_UPDATED_BY_USER_ID = "LastUpdatedByUserId";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED_BY_USER_ID)
  private Integer lastUpdatedByUserId;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_LOCATION_NAME = "LocationName";
  @SerializedName(SERIALIZED_NAME_LOCATION_NAME)
  private String locationName;

  public static final String SERIALIZED_NAME_COORDINATES = "Coordinates";
  @SerializedName(SERIALIZED_NAME_COORDINATES)
  private List<BasicCoordinate> coordinates = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "CreatedAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "UpdatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_TRIGGER_JOB_CODE_ID = "TriggerJobCodeId";
  @SerializedName(SERIALIZED_NAME_TRIGGER_JOB_CODE_ID)
  private Integer triggerJobCodeId;

  public static final String SERIALIZED_NAME_TRIGGER_TASK_ID = "TriggerTaskId";
  @SerializedName(SERIALIZED_NAME_TRIGGER_TASK_ID)
  private Integer triggerTaskId;

  /**
   * The settings for triggering actions
   */
  @JsonAdapter(TriggerSettingsEnum.Adapter.class)
  public enum TriggerSettingsEnum {
    NONE("None"),
    
    STARTTIMESHEETWHENENTERING("StartTimesheetWhenEntering"),
    
    STOPTIMESHEETWHENENTERING("StopTimesheetWhenEntering"),
    
    STARTONENTERSTOPONLEAVE("StartOnEnterStopOnLeave");

    private String value;

    TriggerSettingsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TriggerSettingsEnum fromValue(String value) {
      for (TriggerSettingsEnum b : TriggerSettingsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TriggerSettingsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TriggerSettingsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TriggerSettingsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TriggerSettingsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TRIGGER_SETTINGS = "TriggerSettings";
  @SerializedName(SERIALIZED_NAME_TRIGGER_SETTINGS)
  private TriggerSettingsEnum triggerSettings;

  public static final String SERIALIZED_NAME_ALERT_TO_ORG_GROUP_ID = "AlertToOrgGroupId";
  @SerializedName(SERIALIZED_NAME_ALERT_TO_ORG_GROUP_ID)
  private Integer alertToOrgGroupId;

  /**
   * The settings for trigger alerts
   */
  @JsonAdapter(AlertSettingsEnum.Adapter.class)
  public enum AlertSettingsEnum {
    NONE("None"),
    
    SENDWHENENTERING("SendWhenEntering"),
    
    SENDWHENEXITING("SendWhenExiting"),
    
    SENDWHENENTERINGOREXITING("SendWhenEnteringOrExiting");

    private String value;

    AlertSettingsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AlertSettingsEnum fromValue(String value) {
      for (AlertSettingsEnum b : AlertSettingsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AlertSettingsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AlertSettingsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AlertSettingsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AlertSettingsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ALERT_SETTINGS = "AlertSettings";
  @SerializedName(SERIALIZED_NAME_ALERT_SETTINGS)
  private AlertSettingsEnum alertSettings;

  public static final String SERIALIZED_NAME_START_TIME_HOUR = "StartTimeHour";
  @SerializedName(SERIALIZED_NAME_START_TIME_HOUR)
  private Integer startTimeHour;

  public static final String SERIALIZED_NAME_START_TIME_MINUTE = "StartTimeMinute";
  @SerializedName(SERIALIZED_NAME_START_TIME_MINUTE)
  private Integer startTimeMinute;

  public static final String SERIALIZED_NAME_END_TIME_HOUR = "EndTimeHour";
  @SerializedName(SERIALIZED_NAME_END_TIME_HOUR)
  private Integer endTimeHour;

  public static final String SERIALIZED_NAME_END_TIME_MINUTE = "EndTimeMinute";
  @SerializedName(SERIALIZED_NAME_END_TIME_MINUTE)
  private Integer endTimeMinute;


  public Geofence geoFencingId(Integer geoFencingId) {
    
    this.geoFencingId = geoFencingId;
    return this;
  }

   /**
   * The ID of the geofence
   * @return geoFencingId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the geofence")

  public Integer getGeoFencingId() {
    return geoFencingId;
  }


  public void setGeoFencingId(Integer geoFencingId) {
    this.geoFencingId = geoFencingId;
  }


  public Geofence orgId(Integer orgId) {
    
    this.orgId = orgId;
    return this;
  }

   /**
   * The ID of the organisation owning the geofence record
   * @return orgId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the organisation owning the geofence record")

  public Integer getOrgId() {
    return orgId;
  }


  public void setOrgId(Integer orgId) {
    this.orgId = orgId;
  }


  public Geofence createdByUserId(Integer createdByUserId) {
    
    this.createdByUserId = createdByUserId;
    return this;
  }

   /**
   * The ID of the user/employee who created the geofence
   * @return createdByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user/employee who created the geofence")

  public Integer getCreatedByUserId() {
    return createdByUserId;
  }


  public void setCreatedByUserId(Integer createdByUserId) {
    this.createdByUserId = createdByUserId;
  }


  public Geofence lastUpdatedByUserId(Integer lastUpdatedByUserId) {
    
    this.lastUpdatedByUserId = lastUpdatedByUserId;
    return this;
  }

   /**
   * The ID of the user/employee who last updated the geofence
   * @return lastUpdatedByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the user/employee who last updated the geofence")

  public Integer getLastUpdatedByUserId() {
    return lastUpdatedByUserId;
  }


  public void setLastUpdatedByUserId(Integer lastUpdatedByUserId) {
    this.lastUpdatedByUserId = lastUpdatedByUserId;
  }


  public Geofence name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * A descriptive name of the geofence
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A descriptive name of the geofence")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public Geofence locationName(String locationName) {
    
    this.locationName = locationName;
    return this;
  }

   /**
   * The name of the approx. location of the geofence
   * @return locationName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The name of the approx. location of the geofence")

  public String getLocationName() {
    return locationName;
  }


  public void setLocationName(String locationName) {
    this.locationName = locationName;
  }


  public Geofence coordinates(List<BasicCoordinate> coordinates) {
    
    this.coordinates = coordinates;
    return this;
  }

  public Geofence addCoordinatesItem(BasicCoordinate coordinatesItem) {
    if (this.coordinates == null) {
      this.coordinates = new ArrayList<BasicCoordinate>();
    }
    this.coordinates.add(coordinatesItem);
    return this;
  }

   /**
   * A list of co-ordinates specifying the geofence
   * @return coordinates
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of co-ordinates specifying the geofence")

  public List<BasicCoordinate> getCoordinates() {
    return coordinates;
  }


  public void setCoordinates(List<BasicCoordinate> coordinates) {
    this.coordinates = coordinates;
  }


  public Geofence createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The date and time the geofence was created.  Time is in UTC.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the geofence was created.  Time is in UTC.")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public Geofence updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * The date and time the geofence was updated last.  Time is in UTC.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The date and time the geofence was updated last.  Time is in UTC.")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public Geofence triggerJobCodeId(Integer triggerJobCodeId) {
    
    this.triggerJobCodeId = triggerJobCodeId;
    return this;
  }

   /**
   * The ID of the job code used when the employee enters/exits the geofence
   * @return triggerJobCodeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the job code used when the employee enters/exits the geofence")

  public Integer getTriggerJobCodeId() {
    return triggerJobCodeId;
  }


  public void setTriggerJobCodeId(Integer triggerJobCodeId) {
    this.triggerJobCodeId = triggerJobCodeId;
  }


  public Geofence triggerTaskId(Integer triggerTaskId) {
    
    this.triggerTaskId = triggerTaskId;
    return this;
  }

   /**
   * The ID of the task used when the employee enters/exits the geofence
   * @return triggerTaskId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The ID of the task used when the employee enters/exits the geofence")

  public Integer getTriggerTaskId() {
    return triggerTaskId;
  }


  public void setTriggerTaskId(Integer triggerTaskId) {
    this.triggerTaskId = triggerTaskId;
  }


  public Geofence triggerSettings(TriggerSettingsEnum triggerSettings) {
    
    this.triggerSettings = triggerSettings;
    return this;
  }

   /**
   * The settings for triggering actions
   * @return triggerSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The settings for triggering actions")

  public TriggerSettingsEnum getTriggerSettings() {
    return triggerSettings;
  }


  public void setTriggerSettings(TriggerSettingsEnum triggerSettings) {
    this.triggerSettings = triggerSettings;
  }


  public Geofence alertToOrgGroupId(Integer alertToOrgGroupId) {
    
    this.alertToOrgGroupId = alertToOrgGroupId;
    return this;
  }

   /**
   * The organisation group that will be notified when the geofence is triggered
   * @return alertToOrgGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The organisation group that will be notified when the geofence is triggered")

  public Integer getAlertToOrgGroupId() {
    return alertToOrgGroupId;
  }


  public void setAlertToOrgGroupId(Integer alertToOrgGroupId) {
    this.alertToOrgGroupId = alertToOrgGroupId;
  }


  public Geofence alertSettings(AlertSettingsEnum alertSettings) {
    
    this.alertSettings = alertSettings;
    return this;
  }

   /**
   * The settings for trigger alerts
   * @return alertSettings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The settings for trigger alerts")

  public AlertSettingsEnum getAlertSettings() {
    return alertSettings;
  }


  public void setAlertSettings(AlertSettingsEnum alertSettings) {
    this.alertSettings = alertSettings;
  }


  public Geofence startTimeHour(Integer startTimeHour) {
    
    this.startTimeHour = startTimeHour;
    return this;
  }

   /**
   * The hour start time. E.g. 13 would be 1pm.  Time is in 24hr format.
   * @return startTimeHour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The hour start time. E.g. 13 would be 1pm.  Time is in 24hr format.")

  public Integer getStartTimeHour() {
    return startTimeHour;
  }


  public void setStartTimeHour(Integer startTimeHour) {
    this.startTimeHour = startTimeHour;
  }


  public Geofence startTimeMinute(Integer startTimeMinute) {
    
    this.startTimeMinute = startTimeMinute;
    return this;
  }

   /**
   * The minute start time.  E.g. 46 would be the 46th minute of the hour.
   * @return startTimeMinute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minute start time.  E.g. 46 would be the 46th minute of the hour.")

  public Integer getStartTimeMinute() {
    return startTimeMinute;
  }


  public void setStartTimeMinute(Integer startTimeMinute) {
    this.startTimeMinute = startTimeMinute;
  }


  public Geofence endTimeHour(Integer endTimeHour) {
    
    this.endTimeHour = endTimeHour;
    return this;
  }

   /**
   * The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.
   * @return endTimeHour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The hour end time. E.g. 21 would be 9pm.  Time is in 24hr format.")

  public Integer getEndTimeHour() {
    return endTimeHour;
  }


  public void setEndTimeHour(Integer endTimeHour) {
    this.endTimeHour = endTimeHour;
  }


  public Geofence endTimeMinute(Integer endTimeMinute) {
    
    this.endTimeMinute = endTimeMinute;
    return this;
  }

   /**
   * The minute end time.  E.g. 13 would be the 13th minute of the hour.
   * @return endTimeMinute
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The minute end time.  E.g. 13 would be the 13th minute of the hour.")

  public Integer getEndTimeMinute() {
    return endTimeMinute;
  }


  public void setEndTimeMinute(Integer endTimeMinute) {
    this.endTimeMinute = endTimeMinute;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Geofence geofence = (Geofence) o;
    return Objects.equals(this.geoFencingId, geofence.geoFencingId) &&
        Objects.equals(this.orgId, geofence.orgId) &&
        Objects.equals(this.createdByUserId, geofence.createdByUserId) &&
        Objects.equals(this.lastUpdatedByUserId, geofence.lastUpdatedByUserId) &&
        Objects.equals(this.name, geofence.name) &&
        Objects.equals(this.locationName, geofence.locationName) &&
        Objects.equals(this.coordinates, geofence.coordinates) &&
        Objects.equals(this.createdAt, geofence.createdAt) &&
        Objects.equals(this.updatedAt, geofence.updatedAt) &&
        Objects.equals(this.triggerJobCodeId, geofence.triggerJobCodeId) &&
        Objects.equals(this.triggerTaskId, geofence.triggerTaskId) &&
        Objects.equals(this.triggerSettings, geofence.triggerSettings) &&
        Objects.equals(this.alertToOrgGroupId, geofence.alertToOrgGroupId) &&
        Objects.equals(this.alertSettings, geofence.alertSettings) &&
        Objects.equals(this.startTimeHour, geofence.startTimeHour) &&
        Objects.equals(this.startTimeMinute, geofence.startTimeMinute) &&
        Objects.equals(this.endTimeHour, geofence.endTimeHour) &&
        Objects.equals(this.endTimeMinute, geofence.endTimeMinute);
  }

  @Override
  public int hashCode() {
    return Objects.hash(geoFencingId, orgId, createdByUserId, lastUpdatedByUserId, name, locationName, coordinates, createdAt, updatedAt, triggerJobCodeId, triggerTaskId, triggerSettings, alertToOrgGroupId, alertSettings, startTimeHour, startTimeMinute, endTimeHour, endTimeMinute);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Geofence {\n");
    sb.append("    geoFencingId: ").append(toIndentedString(geoFencingId)).append("\n");
    sb.append("    orgId: ").append(toIndentedString(orgId)).append("\n");
    sb.append("    createdByUserId: ").append(toIndentedString(createdByUserId)).append("\n");
    sb.append("    lastUpdatedByUserId: ").append(toIndentedString(lastUpdatedByUserId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    locationName: ").append(toIndentedString(locationName)).append("\n");
    sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    triggerJobCodeId: ").append(toIndentedString(triggerJobCodeId)).append("\n");
    sb.append("    triggerTaskId: ").append(toIndentedString(triggerTaskId)).append("\n");
    sb.append("    triggerSettings: ").append(toIndentedString(triggerSettings)).append("\n");
    sb.append("    alertToOrgGroupId: ").append(toIndentedString(alertToOrgGroupId)).append("\n");
    sb.append("    alertSettings: ").append(toIndentedString(alertSettings)).append("\n");
    sb.append("    startTimeHour: ").append(toIndentedString(startTimeHour)).append("\n");
    sb.append("    startTimeMinute: ").append(toIndentedString(startTimeMinute)).append("\n");
    sb.append("    endTimeHour: ").append(toIndentedString(endTimeHour)).append("\n");
    sb.append("    endTimeMinute: ").append(toIndentedString(endTimeMinute)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

