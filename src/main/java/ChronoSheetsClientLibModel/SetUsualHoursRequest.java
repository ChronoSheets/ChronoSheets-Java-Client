/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibModel;

import java.util.Objects;
import java.util.Arrays;
import ChronoSheetsClientLibModel.UsualHoursDay;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * An object that can be used to set the Usual Hours (Rostered Hours) of an employee user account
 */
@ApiModel(description = "An object that can be used to set the Usual Hours (Rostered Hours) of an employee user account")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-01-25T22:43:31.260+11:00[Australia/Sydney]")
public class SetUsualHoursRequest {
  public static final String SERIALIZED_NAME_USUAL_HOURS_DATA = "UsualHoursData";
  @SerializedName(SERIALIZED_NAME_USUAL_HOURS_DATA)
  private List<UsualHoursDay> usualHoursData = null;

  public static final String SERIALIZED_NAME_USER_ID = "UserId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;


  public SetUsualHoursRequest usualHoursData(List<UsualHoursDay> usualHoursData) {
    
    this.usualHoursData = usualHoursData;
    return this;
  }

  public SetUsualHoursRequest addUsualHoursDataItem(UsualHoursDay usualHoursDataItem) {
    if (this.usualHoursData == null) {
      this.usualHoursData = new ArrayList<UsualHoursDay>();
    }
    this.usualHoursData.add(usualHoursDataItem);
    return this;
  }

   /**
   * A Collection of days (Mon-Sun) with updated Roster timeslots
   * @return usualHoursData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A Collection of days (Mon-Sun) with updated Roster timeslots")

  public List<UsualHoursDay> getUsualHoursData() {
    return usualHoursData;
  }


  public void setUsualHoursData(List<UsualHoursDay> usualHoursData) {
    this.usualHoursData = usualHoursData;
  }


  public SetUsualHoursRequest userId(Integer userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The Id of the User that these updated Rostered Hours will be applied to
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The Id of the User that these updated Rostered Hours will be applied to")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    this.userId = userId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SetUsualHoursRequest setUsualHoursRequest = (SetUsualHoursRequest) o;
    return Objects.equals(this.usualHoursData, setUsualHoursRequest.usualHoursData) &&
        Objects.equals(this.userId, setUsualHoursRequest.userId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(usualHoursData, userId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SetUsualHoursRequest {\n");
    sb.append("    usualHoursData: ").append(toIndentedString(usualHoursData)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

