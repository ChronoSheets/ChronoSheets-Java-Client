/*
 * The ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  </p>  <p>      First Steps:       <ol>          <li>Make sure you've <a href='/HomeV2/App/sign-up'>signed up to ChronoSheets</a> to get yourself a user account</li>          <li>Confirm your account by following the link sent to your email address.  This will activate your account</li>          <li>Use your username and password to obtain an Auth Token by using the DoLogin method inside the UserProfile section below.  Use the Auth Token as an argument to the other methods</li>          <li>Try different methods in the API Playground to learn about the API</li>          <li>If you're stuck, try the full getting started guide on the <a href='/Home/ApiDocs'>API Toolkit</a> page.</li>      </ol>  </p>  <p>      Further Steps:       <ul>          <li>Create a mobile app (iOS, Android or Windows) using one of the ChronoSheets Mobile SDKs</li>          <li>Create a custom integration with your app using one of the ChronoSheets API Client Libraries.</li>      </ul>      Read more about the API Toolkit on the <a href='/Home/ApiDocs'>API Toolkit</a> page.  </p></div>
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibModel;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Fields for inserting a new Organisation Group
 */
@ApiModel(description = "Fields for inserting a new Organisation Group")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-07-07T17:56:39.742+10:00")
public class CSInsertOrganisationGroupRequest {
  @SerializedName("OrganisationGroupName")
  private String organisationGroupName = null;

  @SerializedName("OrganisationGroupUserIds")
  private List<Integer> organisationGroupUserIds = null;

  public CSInsertOrganisationGroupRequest organisationGroupName(String organisationGroupName) {
    this.organisationGroupName = organisationGroupName;
    return this;
  }

   /**
   * The name of the new Organisation Group.  This is used when you&#39;re looking up Organisation Groups elsewhere through ChronoSheets
   * @return organisationGroupName
  **/
  @ApiModelProperty(value = "The name of the new Organisation Group.  This is used when you're looking up Organisation Groups elsewhere through ChronoSheets")
  public String getOrganisationGroupName() {
    return organisationGroupName;
  }

  public void setOrganisationGroupName(String organisationGroupName) {
    this.organisationGroupName = organisationGroupName;
  }

  public CSInsertOrganisationGroupRequest organisationGroupUserIds(List<Integer> organisationGroupUserIds) {
    this.organisationGroupUserIds = organisationGroupUserIds;
    return this;
  }

  public CSInsertOrganisationGroupRequest addOrganisationGroupUserIdsItem(Integer organisationGroupUserIdsItem) {
    if (this.organisationGroupUserIds == null) {
      this.organisationGroupUserIds = new ArrayList<Integer>();
    }
    this.organisationGroupUserIds.add(organisationGroupUserIdsItem);
    return this;
  }

   /**
   * The Ids of the Users that are going to be in this Organisation Group
   * @return organisationGroupUserIds
  **/
  @ApiModelProperty(value = "The Ids of the Users that are going to be in this Organisation Group")
  public List<Integer> getOrganisationGroupUserIds() {
    return organisationGroupUserIds;
  }

  public void setOrganisationGroupUserIds(List<Integer> organisationGroupUserIds) {
    this.organisationGroupUserIds = organisationGroupUserIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CSInsertOrganisationGroupRequest insertOrganisationGroupRequest = (CSInsertOrganisationGroupRequest) o;
    return Objects.equals(this.organisationGroupName, insertOrganisationGroupRequest.organisationGroupName) &&
        Objects.equals(this.organisationGroupUserIds, insertOrganisationGroupRequest.organisationGroupUserIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organisationGroupName, organisationGroupUserIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CSInsertOrganisationGroupRequest {\n");
    
    sb.append("    organisationGroupName: ").append(toIndentedString(organisationGroupName)).append("\n");
    sb.append("    organisationGroupUserIds: ").append(toIndentedString(organisationGroupUserIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

