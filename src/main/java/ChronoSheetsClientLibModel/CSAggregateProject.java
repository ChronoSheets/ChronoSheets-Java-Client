/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibModel;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CSAggregateProject
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-18T19:40:56.212+10:00")
public class CSAggregateProject {
  @SerializedName("Id")
  private Integer id = null;

  @SerializedName("ClientId")
  private Integer clientId = null;

  @SerializedName("OrganisationId")
  private Integer organisationId = null;

  @SerializedName("ProjectName")
  private String projectName = null;

  @SerializedName("CostEstimation")
  private Double costEstimation = null;

  @SerializedName("StartDate")
  private OffsetDateTime startDate = null;

  @SerializedName("EndDate")
  private OffsetDateTime endDate = null;

  public CSAggregateProject id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The ID of the project
   * @return id
  **/
  @ApiModelProperty(value = "The ID of the project")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public CSAggregateProject clientId(Integer clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * The ID of the client that this project is assigned to
   * @return clientId
  **/
  @ApiModelProperty(value = "The ID of the client that this project is assigned to")
  public Integer getClientId() {
    return clientId;
  }

  public void setClientId(Integer clientId) {
    this.clientId = clientId;
  }

  public CSAggregateProject organisationId(Integer organisationId) {
    this.organisationId = organisationId;
    return this;
  }

   /**
   * The ID of your organisation
   * @return organisationId
  **/
  @ApiModelProperty(value = "The ID of your organisation")
  public Integer getOrganisationId() {
    return organisationId;
  }

  public void setOrganisationId(Integer organisationId) {
    this.organisationId = organisationId;
  }

  public CSAggregateProject projectName(String projectName) {
    this.projectName = projectName;
    return this;
  }

   /**
   * The name of the project (can be viewed in PROJECT TIMELINES)
   * @return projectName
  **/
  @ApiModelProperty(value = "The name of the project (can be viewed in PROJECT TIMELINES)")
  public String getProjectName() {
    return projectName;
  }

  public void setProjectName(String projectName) {
    this.projectName = projectName;
  }

  public CSAggregateProject costEstimation(Double costEstimation) {
    this.costEstimation = costEstimation;
    return this;
  }

   /**
   * The estimated cost of the project (can be viewed in PROJECT TIMELINES)
   * @return costEstimation
  **/
  @ApiModelProperty(value = "The estimated cost of the project (can be viewed in PROJECT TIMELINES)")
  public Double getCostEstimation() {
    return costEstimation;
  }

  public void setCostEstimation(Double costEstimation) {
    this.costEstimation = costEstimation;
  }

  public CSAggregateProject startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * The start date of the project (can be viewed in PROJECT TIMELINES)
   * @return startDate
  **/
  @ApiModelProperty(value = "The start date of the project (can be viewed in PROJECT TIMELINES)")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public CSAggregateProject endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * The end date of the project (can be viewed in PROJECT TIMELINES)
   * @return endDate
  **/
  @ApiModelProperty(value = "The end date of the project (can be viewed in PROJECT TIMELINES)")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CSAggregateProject aggregateProject = (CSAggregateProject) o;
    return Objects.equals(this.id, aggregateProject.id) &&
        Objects.equals(this.clientId, aggregateProject.clientId) &&
        Objects.equals(this.organisationId, aggregateProject.organisationId) &&
        Objects.equals(this.projectName, aggregateProject.projectName) &&
        Objects.equals(this.costEstimation, aggregateProject.costEstimation) &&
        Objects.equals(this.startDate, aggregateProject.startDate) &&
        Objects.equals(this.endDate, aggregateProject.endDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, clientId, organisationId, projectName, costEstimation, startDate, endDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CSAggregateProject {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    organisationId: ").append(toIndentedString(organisationId)).append("\n");
    sb.append("    projectName: ").append(toIndentedString(projectName)).append("\n");
    sb.append("    costEstimation: ").append(toIndentedString(costEstimation)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

