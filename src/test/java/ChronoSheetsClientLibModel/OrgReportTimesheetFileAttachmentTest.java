/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibModel;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OrgReportTimesheetFileAttachment
 */
public class OrgReportTimesheetFileAttachmentTest {
    private final OrgReportTimesheetFileAttachment model = new OrgReportTimesheetFileAttachment();

    /**
     * Model tests for OrgReportTimesheetFileAttachment
     */
    @Test
    public void testOrgReportTimesheetFileAttachment() {
        // TODO: test OrgReportTimesheetFileAttachment
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'emailAddress'
     */
    @Test
    public void emailAddressTest() {
        // TODO: test emailAddress
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'timesheetId'
     */
    @Test
    public void timesheetIdTest() {
        // TODO: test timesheetId
    }

    /**
     * Test the property 'documentS3SignedUrl'
     */
    @Test
    public void documentS3SignedUrlTest() {
        // TODO: test documentS3SignedUrl
    }

    /**
     * Test the property 'imageLargeS3SignedUrl'
     */
    @Test
    public void imageLargeS3SignedUrlTest() {
        // TODO: test imageLargeS3SignedUrl
    }

    /**
     * Test the property 'imageMediumS3SignedUrl'
     */
    @Test
    public void imageMediumS3SignedUrlTest() {
        // TODO: test imageMediumS3SignedUrl
    }

    /**
     * Test the property 'imageSmallS3SignedUrl'
     */
    @Test
    public void imageSmallS3SignedUrlTest() {
        // TODO: test imageSmallS3SignedUrl
    }

    /**
     * Test the property 'timesheetStart'
     */
    @Test
    public void timesheetStartTest() {
        // TODO: test timesheetStart
    }

    /**
     * Test the property 'timesheetEnd'
     */
    @Test
    public void timesheetEndTest() {
        // TODO: test timesheetEnd
    }

    /**
     * Test the property 'fileAttachmentId'
     */
    @Test
    public void fileAttachmentIdTest() {
        // TODO: test fileAttachmentId
    }

    /**
     * Test the property 'userId'
     */
    @Test
    public void userIdTest() {
        // TODO: test userId
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'mobilePlatform'
     */
    @Test
    public void mobilePlatformTest() {
        // TODO: test mobilePlatform
    }

    /**
     * Test the property 'attachmentType'
     */
    @Test
    public void attachmentTypeTest() {
        // TODO: test attachmentType
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'nonImageFilePath'
     */
    @Test
    public void nonImageFilePathTest() {
        // TODO: test nonImageFilePath
    }

    /**
     * Test the property 'imageLargeFilePath'
     */
    @Test
    public void imageLargeFilePathTest() {
        // TODO: test imageLargeFilePath
    }

    /**
     * Test the property 'imageMediumFilePath'
     */
    @Test
    public void imageMediumFilePathTest() {
        // TODO: test imageMediumFilePath
    }

    /**
     * Test the property 'imageSmallFilePath'
     */
    @Test
    public void imageSmallFilePathTest() {
        // TODO: test imageSmallFilePath
    }

    /**
     * Test the property 'originalFileName'
     */
    @Test
    public void originalFileNameTest() {
        // TODO: test originalFileName
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'dateUploaded'
     */
    @Test
    public void dateUploadedTest() {
        // TODO: test dateUploaded
    }

    /**
     * Test the property 'dateImageCaptured'
     */
    @Test
    public void dateImageCapturedTest() {
        // TODO: test dateImageCaptured
    }

    /**
     * Test the property 'storageAllocationBytes'
     */
    @Test
    public void storageAllocationBytesTest() {
        // TODO: test storageAllocationBytes
    }

    /**
     * Test the property 'audioDurationSeconds'
     */
    @Test
    public void audioDurationSecondsTest() {
        // TODO: test audioDurationSeconds
    }

}
