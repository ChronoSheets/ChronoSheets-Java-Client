/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibModel;

import ChronoSheetsClientLibModel.BasicCoordinate;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for ExtendedGeofence
 */
public class ExtendedGeofenceTest {
    private final ExtendedGeofence model = new ExtendedGeofence();

    /**
     * Model tests for ExtendedGeofence
     */
    @Test
    public void testExtendedGeofence() {
        // TODO: test ExtendedGeofence
    }

    /**
     * Test the property 'jobCode'
     */
    @Test
    public void jobCodeTest() {
        // TODO: test jobCode
    }

    /**
     * Test the property 'taskName'
     */
    @Test
    public void taskNameTest() {
        // TODO: test taskName
    }

    /**
     * Test the property 'createdBy'
     */
    @Test
    public void createdByTest() {
        // TODO: test createdBy
    }

    /**
     * Test the property 'updatedBy'
     */
    @Test
    public void updatedByTest() {
        // TODO: test updatedBy
    }

    /**
     * Test the property 'alertOrganisation'
     */
    @Test
    public void alertOrganisationTest() {
        // TODO: test alertOrganisation
    }

    /**
     * Test the property 'geoFencingId'
     */
    @Test
    public void geoFencingIdTest() {
        // TODO: test geoFencingId
    }

    /**
     * Test the property 'orgId'
     */
    @Test
    public void orgIdTest() {
        // TODO: test orgId
    }

    /**
     * Test the property 'createdByUserId'
     */
    @Test
    public void createdByUserIdTest() {
        // TODO: test createdByUserId
    }

    /**
     * Test the property 'lastUpdatedByUserId'
     */
    @Test
    public void lastUpdatedByUserIdTest() {
        // TODO: test lastUpdatedByUserId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'locationName'
     */
    @Test
    public void locationNameTest() {
        // TODO: test locationName
    }

    /**
     * Test the property 'coordinates'
     */
    @Test
    public void coordinatesTest() {
        // TODO: test coordinates
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'updatedAt'
     */
    @Test
    public void updatedAtTest() {
        // TODO: test updatedAt
    }

    /**
     * Test the property 'triggerJobCodeId'
     */
    @Test
    public void triggerJobCodeIdTest() {
        // TODO: test triggerJobCodeId
    }

    /**
     * Test the property 'triggerTaskId'
     */
    @Test
    public void triggerTaskIdTest() {
        // TODO: test triggerTaskId
    }

    /**
     * Test the property 'triggerSettings'
     */
    @Test
    public void triggerSettingsTest() {
        // TODO: test triggerSettings
    }

    /**
     * Test the property 'alertToOrgGroupId'
     */
    @Test
    public void alertToOrgGroupIdTest() {
        // TODO: test alertToOrgGroupId
    }

    /**
     * Test the property 'alertSettings'
     */
    @Test
    public void alertSettingsTest() {
        // TODO: test alertSettings
    }

    /**
     * Test the property 'startTimeHour'
     */
    @Test
    public void startTimeHourTest() {
        // TODO: test startTimeHour
    }

    /**
     * Test the property 'startTimeMinute'
     */
    @Test
    public void startTimeMinuteTest() {
        // TODO: test startTimeMinute
    }

    /**
     * Test the property 'endTimeHour'
     */
    @Test
    public void endTimeHourTest() {
        // TODO: test endTimeHour
    }

    /**
     * Test the property 'endTimeMinute'
     */
    @Test
    public void endTimeMinuteTest() {
        // TODO: test endTimeMinute
    }

}
