/*
 * ChronoSheets API
 * <div style='font-size: 14px!important;font-family: Open Sans,sans-serif!important;color: #3b4151!important;'><p>      ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 3 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.  Before starting, sign up for a ChronoSheets account at <a target='_BLANK' href='http://tsheets.xyz/signup'>http://tsheets.xyz/signup</a>.  </p></div><div id='cs-extra-info'></div>
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibApi;

import ChronoSheetsClient.ApiException;
import ChronoSheetsClientLibModel.CSApiResponseForPaginatedListTimesheetAutomationWithOrgAndGeofence;
import ChronoSheetsClientLibModel.CSApiResponseInt32;
import ChronoSheetsClientLibModel.CSCreateAutomationStepRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TimesheetAutomationApi
 */
@Ignore
public class TimesheetAutomationApiTest {

    private final TimesheetAutomationApi api = new TimesheetAutomationApi();

    
    /**
     * Creates an automation step.  Timesheet automation is determined by looking at steps taken by the user.  Create a step to log some automation action, such as entering a geofence or tapping on an NFC badge.  Requires the &#39;SubmitTimesheets&#39; permission.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void timesheetAutomationCreateAutomationStepTest() throws ApiException {
        CSCreateAutomationStepRequest request = null;
        String xChronosheetsAuth = null;
        CSApiResponseInt32 response = api.timesheetAutomationCreateAutomationStep(request, xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Retrieve the timesheet automation / alerts for geofences activities or NFC tap on/off.  Requires the &#39;ManageGeofencing&#39; permission.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void timesheetAutomationGetTimesheetAutomationAuditTrailTest() throws ApiException {
        Integer geofenceId = null;
        Integer userId = null;
        String sort = null;
        String order = null;
        String xChronosheetsAuth = null;
        Integer skip = null;
        Integer take = null;
        CSApiResponseForPaginatedListTimesheetAutomationWithOrgAndGeofence response = api.timesheetAutomationGetTimesheetAutomationAuditTrail(geofenceId, userId, sort, order, xChronosheetsAuth, skip, take);

        // TODO: test validations
    }
    
}
