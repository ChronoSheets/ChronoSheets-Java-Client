/*
 * ChronoSheets API
 * ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.
 *
 * OpenAPI spec version: v1
 * Contact: lachlan@chronosheets.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibApi;

import ChronoSheetsClient.ApiException;
import ChronoSheetsClientLibModel.CSApiResponseBoolean;
import ChronoSheetsClientLibModel.CSApiResponseClient;
import ChronoSheetsClientLibModel.CSApiResponseInt32;
import ChronoSheetsClientLibModel.CSApiResponseListClient;
import ChronoSheetsClientLibModel.CSInsertClientRequest;
import ChronoSheetsClientLibModel.CSSaveClientRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClientsApi
 */
@Ignore
public class ClientsApiTest {

    private final ClientsApi api = new ClientsApi();

    
    /**
     * Create a client.  Requires the &#39;ManageClientsAndProjects&#39; permission.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsCreateClientTest() throws ApiException {
        CSInsertClientRequest request = null;
        String xChronosheetsAuth = null;
        CSApiResponseInt32 response = api.clientsCreateClient(request, xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Get a particular client.  Requires the &#39;ManageClientsAndProjects&#39; or &#39;ManageJobsAndTask&#39; permissions.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsGetClientTest() throws ApiException {
        Integer clientId = null;
        String xChronosheetsAuth = null;
        CSApiResponseClient response = api.clientsGetClient(clientId, xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Get a collection of clients that are under your organisation.  Requires the &#39;ManageClientsAndProjects&#39; or &#39;ManageJobsAndTask&#39; permissions.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsGetClientsTest() throws ApiException {
        String xChronosheetsAuth = null;
        CSApiResponseListClient response = api.clientsGetClients(xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Update a client.  Requires the &#39;ManageClientsAndProjects&#39; permission.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void clientsUpdateClientTest() throws ApiException {
        CSSaveClientRequest request = null;
        String xChronosheetsAuth = null;
        CSApiResponseBoolean response = api.clientsUpdateClient(request, xChronosheetsAuth);

        // TODO: test validations
    }
    
}
