/*
 * ChronoSheets API
 * ChronoSheets is a flexible timesheet solution for small to medium businesses, it is free for small teams of up to 5 and there are iOS and Android apps available.  Use the ChronoSheets API to create your own custom integrations.
 *
 * OpenAPI spec version: v1
 * Contact: lachlan@chronosheets.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ChronoSheetsClientLibApi;

import ChronoSheetsClient.ApiException;
import ChronoSheetsClientLibModel.CsApiApiResponseBoolean;
import ChronoSheetsClientLibModel.CsApiApiResponseFleetVehicle;
import ChronoSheetsClientLibModel.CsApiApiResponseInt32;
import ChronoSheetsClientLibModel.CsApiApiResponseListFleetVehicle;
import ChronoSheetsClientLibModel.CsApiInsertVehicleRequest;
import ChronoSheetsClientLibModel.CsApiSaveVehicleRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FleetApi
 */
@Ignore
public class FleetApiTest {

    private final FleetApi api = new FleetApi();

    
    /**
     * Create a vehicle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fleetCreateVehicleTest() throws ApiException {
        CsApiInsertVehicleRequest request = null;
        String xChronosheetsAuth = null;
        CsApiApiResponseInt32 response = api.fleetCreateVehicle(request, xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Get a particular vehicle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fleetGetVehicleByIdTest() throws ApiException {
        Integer vehicleId = null;
        String xChronosheetsAuth = null;
        CsApiApiResponseFleetVehicle response = api.fleetGetVehicleById(vehicleId, xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Get a collection of vehicles that are under your organisation
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fleetGetVehiclesTest() throws ApiException {
        Boolean includeDeleted = null;
        String xChronosheetsAuth = null;
        CsApiApiResponseListFleetVehicle response = api.fleetGetVehicles(includeDeleted, xChronosheetsAuth);

        // TODO: test validations
    }
    
    /**
     * Update a vehicle
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void fleetUpdateVehicleTest() throws ApiException {
        CsApiSaveVehicleRequest request = null;
        String xChronosheetsAuth = null;
        CsApiApiResponseBoolean response = api.fleetUpdateVehicle(request, xChronosheetsAuth);

        // TODO: test validations
    }
    
}
